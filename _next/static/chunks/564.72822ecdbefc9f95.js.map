{"version":3,"file":"static/chunks/564.72822ecdbefc9f95.js","mappings":"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","sources":["webpack://_N_E/./node_modules/date-fns/locale/be/_lib/formatDistance/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', String(count)); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', String(count)); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', String(count));\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options && options.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'праз ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' таму';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nvar halfAMinute = function (_, options) {\n  if (options && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'праз паўхвіліны';\n    } else {\n      return 'паўхвіліны таму';\n    }\n  }\n\n  return 'паўхвіліны';\n};\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за секунду',\n      singularNominative: 'менш за {{count}} секунду',\n      singularGenitive: 'менш за {{count}} секунды',\n      pluralGenitive: 'менш за {{count}} секунд'\n    },\n    future: {\n      one: 'менш, чым праз секунду',\n      singularNominative: 'менш, чым праз {{count}} секунду',\n      singularGenitive: 'менш, чым праз {{count}} секунды',\n      pluralGenitive: 'менш, чым праз {{count}} секунд'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунда',\n      singularGenitive: '{{count}} секунды',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунду таму',\n      singularGenitive: '{{count}} секунды таму',\n      pluralGenitive: '{{count}} секунд таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} секунду',\n      singularGenitive: 'праз {{count}} секунды',\n      pluralGenitive: 'праз {{count}} секунд'\n    }\n  }),\n  halfAMinute: halfAMinute,\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за хвіліну',\n      singularNominative: 'менш за {{count}} хвіліну',\n      singularGenitive: 'менш за {{count}} хвіліны',\n      pluralGenitive: 'менш за {{count}} хвілін'\n    },\n    future: {\n      one: 'менш, чым праз хвіліну',\n      singularNominative: 'менш, чым праз {{count}} хвіліну',\n      singularGenitive: 'менш, чым праз {{count}} хвіліны',\n      pluralGenitive: 'менш, чым праз {{count}} хвілін'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} хвіліна',\n      singularGenitive: '{{count}} хвіліны',\n      pluralGenitive: '{{count}} хвілін'\n    },\n    past: {\n      singularNominative: '{{count}} хвіліну таму',\n      singularGenitive: '{{count}} хвіліны таму',\n      pluralGenitive: '{{count}} хвілін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} хвіліну',\n      singularGenitive: 'праз {{count}} хвіліны',\n      pluralGenitive: 'праз {{count}} хвілін'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} гадзіны',\n      singularGenitive: 'каля {{count}} гадзін',\n      pluralGenitive: 'каля {{count}} гадзін'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} гадзіну',\n      singularGenitive: 'прыблізна праз {{count}} гадзіны',\n      pluralGenitive: 'прыблізна праз {{count}} гадзін'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} гадзіна',\n      singularGenitive: '{{count}} гадзіны',\n      pluralGenitive: '{{count}} гадзін'\n    },\n    past: {\n      singularNominative: '{{count}} гадзіну таму',\n      singularGenitive: '{{count}} гадзіны таму',\n      pluralGenitive: '{{count}} гадзін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} гадзіну',\n      singularGenitive: 'праз {{count}} гадзіны',\n      pluralGenitive: 'праз {{count}} гадзін'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} дзень',\n      singularGenitive: '{{count}} дні',\n      pluralGenitive: '{{count}} дзён'\n    }\n  }),\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      // TODO\n      singularGenitive: 'каля {{count}} месяцаў',\n      // TODO\n      pluralGenitive: 'каля {{count}} месяцаў' // TODO\n\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      // TODO\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      // TODO\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў' // TODO\n\n    }\n  }),\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      singularGenitive: 'каля {{count}} месяцаў',\n      pluralGenitive: 'каля {{count}} месяцаў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} года',\n      singularGenitive: 'каля {{count}} гадоў',\n      pluralGenitive: 'каля {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} год',\n      singularGenitive: 'прыблізна праз {{count}} гады',\n      pluralGenitive: 'прыблізна праз {{count}} гадоў'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} год',\n      singularGenitive: '{{count}} гады',\n      pluralGenitive: '{{count}} гадоў'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'больш за {{count}} год',\n      singularGenitive: 'больш за {{count}} гады',\n      pluralGenitive: 'больш за {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'больш, чым праз {{count}} год',\n      singularGenitive: 'больш, чым праз {{count}} гады',\n      pluralGenitive: 'больш, чым праз {{count}} гадоў'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'амаль {{count}} год',\n      singularGenitive: 'амаль {{count}} гады',\n      pluralGenitive: 'амаль {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'амаль праз {{count}} год',\n      singularGenitive: 'амаль праз {{count}} гады',\n      pluralGenitive: 'амаль праз {{count}} гадоў'\n    }\n  })\n};\n\nvar formatDistance = function (token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n};\n\nvar _default = formatDistance;\nexports.default = _default;\nmodule.exports = exports.default;"],"names":["declension","scheme","count","undefined","one","rem10","rem100","singularNominative","replace","String","singularGenitive","pluralGenitive","buildLocalizeTokenFn","options","addSuffix","comparison","future","regular","past","Object","defineProperty","exports","value","formatDistanceLocale","lessThanXSeconds","xSeconds","halfAMinute","_","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","_default","token","module","default"],"sourceRoot":""}