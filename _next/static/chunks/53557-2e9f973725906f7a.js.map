{"version":3,"file":"static/chunks/53557-2e9f973725906f7a.js","mappings":"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","sources":["webpack://_N_E/./src/components/Footer.tsx","webpack://_N_E/./src/components/SearchLocation.tsx","webpack://_N_E/./src/components/CounterInput.tsx","webpack://_N_E/./src/components/FlightDatePicker.tsx","webpack://_N_E/./src/components/SearchForm.tsx","webpack://_N_E/./src/hooks/useWhoami.ts","webpack://_N_E/./src/hooks/useRates.ts","webpack://_N_E/./src/hooks/useSwr.ts"],"sourcesContent":["import Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport Divider from \"@mui/material/Divider\";\nimport Typography from \"@mui/material/Typography\";\nimport { useTranslations } from \"next-intl\";\nimport React from \"react\";\nimport { trackEvent } from \"../utils\";\nimport Link from \"./Link\";\n\nconst footers = [\n  {\n    title: \"footer-booking\",\n    description: [\n      { name: \"flights\", link: \"routes-flights\" },\n      { name: \"navbar-hotels\", externalLink: \"https://tp.media/r?marker=56123&trs=15329&p=2076&u=https%3A%2F%2Fbooking.com\" },\n      { name: \"navbar-cars\", externalLink: \"https://tp.media/r?marker=56123&trs=15329&p=3814&u=https%3A%2F%2Frentalcars.com\" },\n      // { name: \"explore\", link: \"routes-explore\" },\n    ],\n  },\n  {\n    title: \"info-pages\",\n    description: [\n      { name: \"airlines\", link: \"routes-airlines\" },\n      { name: \"airports\", link: \"routes-airports\" },\n      { name: \"cities\", link: \"routes-cities\" },\n      { name: \"countries\", link: \"routes-countries\" },\n      { name: \"baggage-fees\", link: \"routes-airlines-baggage-fees\" },\n      { name: \"cheap-flights\", link: \"routes-cheap-flights\" },\n    ],\n  },\n  {\n    title: \"company\",\n    description: [\n      { name: \"privacy\", link: \"routes-privacy-policy\" },\n      { name: \"terms\", link: \"routes-terms-and-conditions\" },\n      { name: \"cookies\", link: \"routes-cookies\" },\n    ],\n  },\n  {\n    title: \"footer-connect\",\n    description: [\n      {\n        name: \"footer-facebook\",\n        externalLink: \"https://www.facebook.com/flightscannercom\",\n      },\n      {\n        name: \"footer-twitter\",\n        externalLink: \"https://twitter.com/flightscanner\",\n      },\n      {\n        name: \"footer-instagram\",\n        externalLink: \"https://instagram.com/flightscannercom\",\n      },\n    ],\n  },\n] as any;\n\nexport const Footer = () => {\n  const t = useTranslations();\n  return (\n    <Box component=\"footer\">\n      <Divider />\n      <Container maxWidth=\"xl\" sx={{ py: 2 }}>\n        <Box sx={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {footers.map((footer: any) => (\n            <Box key={footer.title} sx={{ padding: 1, flex: 1 }}>\n              <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                {t(footer.title)}\n              </Typography>\n              {footer.description.map((item: any) => (\n                <Link\n                  key={item.name}\n                  target={item.externalLink && \"_blank\"}\n                  href={\n                    item.externalLink\n                      ? `${item.externalLink}`\n                      : `/${t(item.link)}`\n                  }\n                  underline=\"hover\"\n                  color=\"inherit\"\n                  onClick={() => {\n                    trackEvent({\n                      action: \"footerLink\",\n                      label: item.name,\n                    });\n                  }}\n                >\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                    {t(item.name)}\n                  </Typography>\n                </Link>\n              ))}\n            </Box>\n          ))}\n        </Box>\n      </Container>\n      <Divider />\n      <Box sx={{ display: \"flex\", justifyContent: \"center\", p: 1 }}>\n        {t(\"footer-copyright\", { value: new Date().getFullYear() })}\n      </Box>\n    </Box>\n  );\n};\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport throttle from \"lodash/throttle\";\nimport TextField from \"@mui/material/TextField\";\nimport fetchWithRetry from \"fetch-retry\";\nimport { useRouter } from \"next/router\";\nimport { captureException } from \"@sentry/nextjs\";\n\nimport { retryConfig } from \"../utils\";\nimport PlaceIcon from \"@mui/icons-material/Place\";\nimport FlightIcon from \"@mui/icons-material/Flight\";\nimport Box from \"@mui/material/Box\";\n\ninterface MainTextMatchedSubstrings {\n  offset: number;\n  length: number;\n}\n\nconst parseCity = (option: any) => {\n  if (option.country_name) {\n    return `${option.city_name} - ${option.country_name}`;\n  }\n\n  return `${option.city_name}`;\n};\n\nconst getOptionLabelFn = (option: any) => {\n  if (option._type === \"airport\") {\n    return `${option.title} (${option.code}) - ${option.country_name}`;\n  }\n\n  if (option._type === \"city\") {\n    return parseCity(option);\n  }\n\n  return \"\";\n};\n\nexport default function SearchLocation({\n  placeholder,\n  initialValue,\n  onChange = () => {},\n}: any) {\n  const { locale } = useRouter();\n  const [value, setValue] = useState<any | null>({\n    description: \"INIT_INIT\",\n  } as any);\n  const [inputValue, setInputValue] = useState<string>();\n  const [options, setOptions] = useState<readonly any[]>([]);\n  const shouldFetch = useRef(false);\n  const fetchData = useMemo(\n    () =>\n      throttle((request, callback: (results?: readonly any[]) => void) => {\n        fetchWithRetry(fetch)(\n          `https://www.jetradar.com/autocomplete/places?q=${request.input}&locale=${locale}`,\n          { ...retryConfig }\n        )\n          .then((res) => res.json())\n          .then((res) => {\n            callback(res);\n          })\n          .catch((error) => {\n            if (error?.name !== \"AbortError\") {\n              captureException(error);\n            }\n          });\n      }, 300),\n    [locale]\n  );\n\n  useEffect(() => {\n    let active = true;\n\n    if (inputValue === \"\") {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n\n    // Avoid fetching if we have no input value (any entry to input)\n    // Or we have input and initial value equals to that input\n    if (\n      !inputValue ||\n      !shouldFetch.current\n      // (inputValue && initialValue && inputValue === parseCity(initialValue)) ||\n    ) {\n      return;\n    }\n\n    fetchData({ input: inputValue }, (results?: readonly any[]) => {\n      if (active) {\n        let newOptions: readonly any[] = [];\n\n        if (value) {\n          newOptions = [value];\n        }\n\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue, fetch, shouldFetch.current]);\n\n  useEffect(() => {\n    if (initialValue && value?.description === \"INIT_INIT\" && !inputValue) {\n      setValue(initialValue);\n    }\n  }, [initialValue, value, inputValue]);\n\n  useEffect(() => {\n    if (initialValue?.forceUpdate) {\n      const newValue = { ...initialValue };\n      delete newValue.forceUpdate;\n\n      setOptions([]);\n      setValue(newValue);\n      onChange(newValue);\n    }\n  }, [initialValue]);\n\n  return (\n    <Autocomplete\n      sx={{ flex: \"30%\" }}\n      blurOnSelect\n      size=\"small\"\n      aria-required=\"true\"\n      getOptionLabel={(option: any) => getOptionLabelFn(option)}\n      filterOptions={(x) => {\n        return x;\n      }}\n      options={options}\n      autoComplete\n      includeInputInList\n      filterSelectedOptions\n      value={value}\n      onChange={(event: any, newValue: any | null) => {\n        setValue(newValue);\n        onChange(newValue);\n      }}\n      onInputChange={(event, newInputValue, r) => {\n        if (r === \"input\") {\n          shouldFetch.current = true;\n        } else {\n          shouldFetch.current = false;\n        }\n\n        setInputValue(newInputValue);\n      }}\n      renderOption={(props, option) => {\n        const optionString = getOptionLabelFn(option);\n\n        return (\n          <li {...props}>\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n              {option._type === \"airport\" ? <FlightIcon /> : <PlaceIcon />}\n              <Box sx={{ mx: 1 }}>{optionString}</Box>\n            </Box>\n          </li>\n        );\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          ref={params.InputProps.ref}\n          variant=\"outlined\"\n          fullWidth\n          label={placeholder}\n          required\n          InputLabelProps={{ shrink: true }}\n        />\n      )}\n    />\n  );\n}\n","import IconButton from \"@mui/material/IconButton\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\n\nexport default function CounterInput({\n  min = 0,\n  max = 1,\n  value,\n  onChange\n}: any) {\n\n  return (\n    <Stack direction=\"row\" spacing={2} sx={{ alignItems: \"center\" }}>\n      <IconButton\n        aria-label=\"reduce\"\n        onClick={() => {\n          const newCount = value - 1;\n\n          if (newCount >= min) {\n            onChange(value - 1);\n          }\n        }}\n        disabled={value === min}\n      >\n        <RemoveIcon />\n      </IconButton>\n      <Box>{value}</Box>\n      <IconButton\n        aria-label=\"increase\"\n        onClick={() => {\n          const newCount = value + 1;\n          if (newCount <= max) {\n            onChange(value + 1);\n          }\n        }}\n        disabled={value === max}\n      >\n        <AddIcon />\n      </IconButton>\n    </Stack>\n  );\n}\n","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport PickersDay from \"@mui/lab/PickersDay\";\nimport CalendarPickerSkeleton from \"@mui/lab/CalendarPickerSkeleton\";\nimport { useIntl, useTranslations } from \"next-intl\";\nimport MobileDatePicker from \"@mui/lab/MobileDatePicker\";\nimport { useRates } from \"../hooks\";\nimport Box from \"@mui/material/Box\";\nimport { useGlobal } from \"../context\";\nimport { captureException } from \"@sentry/nextjs\";\nimport fetchWithRetry from \"fetch-retry\";\nimport { retryConfig } from \"../utils\";\n\nexport function FlightDatePicker({\n  label,\n  onChange,\n  value,\n  from,\n  to,\n  rates,\n  minDate = new Date(),\n  maxDate = new Date(new Date().setMonth(new Date().getMonth() + 6)),\n}: any) {\n  const t = useTranslations();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const { data: ratesFromApi, isLoading: isLoadingRates } = useRates({\n    toFetch: !!from && !!to && isOpen,\n  });\n  const { currency } = useGlobal();\n  const intl = useIntl();\n  const ratesOr = React.useMemo(\n    () => rates || ratesFromApi,\n    [rates, ratesFromApi]\n  );\n\n  const requestAbortController = React.useRef<AbortController | null>(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [prices, setPrices] = React.useState<any>({});\n\n  const fetchPrices = (date: Date) => {\n    const controller = new AbortController();\n    const month = new Date(Date.UTC(date.getFullYear(), date.getMonth(), 1))\n      .toISOString()\n      .split(\"T\")[0];\n\n    if (from && to && month && ratesOr) {\n      setIsLoading(true);\n      fetchWithRetry(fetch)(\n        `https://lyssa.aviasales.ru/date_picker_prices?depart_months[]=${month}&destination_iata=${to.code}&one_way=true&origin_iata=${from.code}`,\n        {\n          signal: controller.signal,\n          ...retryConfig\n        }\n      )\n        .then((r) => r.json())\n        .then((res: any) => {\n          if (res.prices?.length) {\n            const pricesLength = res.prices.length;\n            const pricesByDay = {} as any;\n\n            res.prices\n              .sort((a: any, b: any) => a.price - b.price)\n              .forEach(({ price, depart_date }: any, index: number) => {\n                pricesByDay[\n                  // depart_date?.split(\"-\")[2] // ?.replace(/^0/g, \"\") - 1\n                  String(new Date(depart_date).getDate())\n                ] = {\n                  price,\n                  isLow:\n                    pricesLength > 5 && index <= Math.round(pricesLength / 4),\n                };\n              });\n\n            setPrices(pricesByDay);\n          }\n          setIsLoading(false);\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          // ignore the error if it's caused by `controller.abort`\n          if (error?.name !== \"AbortError\") {\n            captureException(error)\n          }\n        });\n      requestAbortController.current = controller;\n    }\n  };\n\n  React.useEffect(() => {\n    if (isOpen && value && !isLoadingRates) {\n      fetchPrices(value);\n      // abort request on unmount\n      return () => requestAbortController.current?.abort();\n    }\n  }, [isOpen, isLoadingRates]);\n\n  const handleMonthChange = (date: Date) => {\n    if (requestAbortController.current) {\n      // make sure that you are aborting useless requests\n      // because it is possible to switch between months pretty quickly\n      requestAbortController.current.abort();\n    }\n\n    setPrices({});\n    fetchPrices(date);\n  };\n\n  return (\n    <MobileDatePicker\n      showToolbar={false}\n      label={label}\n      views={[\"day\"]}\n      orientation=\"portrait\"\n      value={value}\n      loading={isLoading}\n      minDate={minDate}\n      maxDate={maxDate}\n      onOpen={() => setIsOpen(true)}\n      onClose={() => setIsOpen(false)}\n      renderLoading={() => <CalendarPickerSkeleton />}\n      disableHighlightToday\n      onChange={(newValue: Date | null) => {\n        onChange(newValue);\n      }}\n      onMonthChange={handleMonthChange}\n      renderInput={(params) => <TextField {...params} InputLabelProps={{ shrink: true }} size=\"small\" />}\n      renderDay={(day, _value, DayComponentProps) => {\n        const priceForDay = prices[String(day.getDate())] as any;\n        const priceFormatted =\n          ratesOr &&\n          priceForDay &&\n          intl.formatNumber(\n            priceForDay.price / ratesOr[currency.code.toLowerCase()],\n            {\n              style: \"currency\",\n              currency: currency.code,\n              maximumFractionDigits: 0,\n              minimumFractionDigits: 0,\n            }\n          );\n\n        return (\n          <Box\n            key={day.toString()}\n            sx={{\n              position: \"relative\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            {/* <Badge\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n              }}\n              color=\"secondary\"\n              badgeContent={priceForDay && !DayComponentProps.outsideCurrentMonth && priceFormatted}\n            > */}\n            <PickersDay {...DayComponentProps} today={false} />\n            {/* </Badge> */}\n            {priceForDay && !DayComponentProps.outsideCurrentMonth && (\n              <Box\n                sx={{\n                  position: \"absolute\",\n                  bottom: \"-6px\",\n                  fontSize: \".5625rem\",\n                  lineHeight: \"1.2\",\n                  color: priceForDay.isLow ? \"#35c768\" : \"#9ea9b7\",\n                  zIndex: 0,\n                  borderRadius: \"10px\",\n                  // background: '#fff',\n                  padding: \"3px\",\n                }}\n              >\n                {priceFormatted}\n              </Box>\n            )}\n          </Box>\n        );\n      }}\n    />\n    // <LocalizationProvider dateAdapter={AdapterDateFns}>\n    //   <DatePicker\n    //     value={value}\n    //     loading={isLoading}\n    //     onChange={(newValue) => {\n    //       setValue(newValue);\n    //     }}\n    //     onMonthChange={handleMonthChange}\n    //     renderInput={(params) => <TextField {...params} />}\n    //     renderLoading={() => <CalendarPickerSkeleton />}\n    //     renderDay={(day, _value, DayComponentProps) => {\n    //       const isSelected =\n    //         !DayComponentProps.outsideCurrentMonth &&\n    //         highlightedDays.indexOf(day.getDate()) > 0;\n\n    //       return (\n    //         <Badge\n    //           key={day.toString()}\n    //           overlap=\"circular\"\n    //           badgeContent={isSelected ? '🌚' : undefined}\n    //         >\n    //           <PickersDay {...DayComponentProps} />\n    //         </Badge>\n    //       );\n    //     }}\n    //   />\n    // </LocalizationProvider>\n  );\n}\n","import React, { useState, useMemo, useEffect, useRef } from \"react\";\nimport { useTranslations } from \"next-intl\";\n\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport {\n  DateRangePicker,\n} from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport TextField from \"@mui/material/TextField\";\n\nimport { LocalizationProvider } from \"@mui/x-date-pickers-pro\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers-pro/AdapterDateFns\";\n\nimport Container from \"@mui/material/Container\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Stack from \"@mui/material/Stack\";\n\nimport ArrowDropDown from \"@mui/icons-material/ArrowDropDown\";\nimport Person from \"@mui/icons-material/Person\";\nimport Search from \"@mui/icons-material/Search\";\n\nimport SearchLocation from \"./SearchLocation\";\nimport Button from \"@mui/material/Button\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport CounterInput from \"./CounterInput\";\nimport { useRouter } from \"next/router\";\nimport { useGlobal } from \"../context\";\nimport { navigateToSearchResults, trackEvent } from \"../utils\";\nimport { FlightDatePicker } from \"./FlightDatePicker\";\nimport { useWhoami } from \"../hooks\";\nimport Divider from \"@mui/material/Divider\";\nimport { MuiPickersAdapterContext } from \"@mui/lab/LocalizationProvider/LocalizationProvider\";\n// import Link from \"@mui/material/Link\";\n// import Chip from \"@mui/material/Chip\";\n\nexport enum ETripTypes {\n  round = \"round\",\n  oneWay = \"oneWay\",\n  multiCity = \"multiCity\",\n}\n\nexport enum ESuggestionsTypes {\n  cheap = \"Cheap\",\n  popular = \"Popular\",\n}\n\nexport enum StopsTypes {\n  nonStop = \"NonStop\",\n  oneStop = \"OneStop\",\n  twoStops = \"TwoStop\",\n}\n\nexport enum ETripClass {\n  economy = \"Y\",\n  business = \"C\",\n  first = \"F\",\n}\n\nconst tripTypes = [\n  { id: ETripTypes.round, value: \"Round trip\", i18n: \"search-form-round\" },\n  { id: ETripTypes.oneWay, value: \"One-way\", i18n: \"search-form-one-way\" },\n];\n\nconst tripClasses = [\n  { id: ETripClass.economy, i18n: \"search-form-economy\" },\n  { id: ETripClass.business, i18n: \"search-form-business\" },\n  // { id: ETripClass.first, i18n: \"search-form-first\" },\n];\n\nconst suggestionsTypes = [\n  { id: ESuggestionsTypes.cheap, value: \"Cheap\", i18n: \"suggestions-cheap\" },\n  {\n    id: ESuggestionsTypes.popular,\n    value: \"Popular\",\n    i18n: \"suggestions-popular\",\n  },\n];\n\nconst stopsTypes = [\n  {\n    id: StopsTypes.nonStop,\n    value: \"NonStop\",\n    title: \"Nonstop only\",\n    i18n: \"filters-stops-non-stop\",\n  },\n  {\n    id: StopsTypes.oneStop,\n    value: \"OneStop\",\n    title: \"1 stop or fewer\",\n    i18n: \"filters-stops-one-stop\",\n  },\n  {\n    id: StopsTypes.twoStops,\n    value: \"TwoStop\",\n    title: \"2 stops or fewer\",\n    i18n: \"filters-stops-two-stop\",\n  },\n];\n\nconst DatePickerWithLoclae = ({\n  value = [null, null] as any,\n  onChange = (values: any) => { },\n}) => {\n  const t = useTranslations();\n  const { dateLocaleFile } = useGlobal();\n\n  return (\n    <LocalizationProvider\n      dateAdapter={AdapterDateFns}\n      localeText={{ start: t(\"departure-date-?\"), end: t(\"return-date-?\") }}\n      adapterLocale={dateLocaleFile}\n    >\n      <DateRangePicker\n        value={value}\n        minDate={new Date()}\n        maxDate={new Date(new Date().setMonth(new Date().getMonth() + 6))}\n        onChange={(newValue) => {\n          // setRange(newValue);\n          onChange(newValue);\n        }}\n        renderInput={(startProps, endProps) => (\n          <Box sx={{ display: 'flex', flex: 1}}>\n            <TextField\n              {...startProps}\n              InputLabelProps={{ shrink: true }}\n              size=\"small\"\n              sx={{ flex: 1}}\n            />\n            <TextField\n              {...endProps}\n              InputLabelProps={{ shrink: true }}\n              size=\"small\"\n              sx={{ ml: 2, flex: 1 }}\n            />\n          </Box>\n        )}\n      />\n    </LocalizationProvider>\n  );\n};\n\nconst SearchForm = ({\n  location,\n  showBooking = true,\n  maxWidth = \"xl\",\n  rates,\n  shouldFetch = false,\n  initalFrom,\n  initialTo,\n}: any) => {\n  const t = useTranslations();\n  const { query, push, replace } = useRouter();\n  const { setSearchState } = useGlobal();\n  const { data: userLocation } = useWhoami({ shouldFetch });\n  const setLocationOnce = useRef<boolean>(false);\n\n  const [tripType, setTripType] = useState<typeof tripTypes[0]>(tripTypes[0]);\n  const [tripClass, setTripClass] = useState<typeof tripClasses[0]>(\n    tripClasses[0]\n  );\n\n  const [adults, setAdults] = useState(1);\n  const [children, setChildren] = useState(0);\n  const [infants, setInfants] = useState(0);\n\n  const [from, setFrom] = useState<any>(initalFrom);\n  const [to, setTo] = useState<any>(initialTo);\n\n  const [initFromQuery, setInitFromQuery] = useState(false);\n\n  const [departureDate, setDepartureDate] = useState<Date | null>(\n    new Date(new Date().setDate(new Date().getDate() + 16))\n  );\n  const [returnDate, setReturnDate] = useState<Date | null>(\n    new Date(new Date().setDate(new Date().getDate() + 21))\n  );\n\n  const [redirectToBooking, setRedirectToBooking] = useState(true);\n\n  // Store prev state\n  const prevPassengers = useRef<number[]>([adults, children, infants]);\n\n  useEffect(() => {\n    if (location && !from) {\n      setFrom({\n        ...location,\n        city_code: location.iata,\n        code: location.iata,\n        city_name: location.name,\n        country_name: location.country_name,\n        _type: \"city\",\n      });\n    } else if (\n      from?.code === location?.iata &&\n      !setLocationOnce.current &&\n      userLocation\n    ) {\n      setFrom({\n        ...userLocation,\n        city_code: userLocation.iata,\n        code: userLocation.iata,\n        city_name: userLocation.name,\n        country_name: userLocation.country_name,\n        forceUpdate: true,\n        _type: \"city\",\n      });\n      setLocationOnce.current = true;\n    }\n  }, [location, from, userLocation]);\n\n  useEffect(() => {\n    if (query && query.from && query.to && !initFromQuery) {\n      const fromSplit = decodeURIComponent(query.from as string)?.split(\":\");\n      const toSplit = decodeURIComponent(query.to as string)?.split(\":\");\n      setFrom({\n        city_code: fromSplit[0],\n        code: fromSplit[0],\n        city_name: fromSplit[1],\n        country_name: fromSplit[2],\n        _type: \"city\",\n      });\n      setTo({\n        city_code: toSplit[0],\n        code: toSplit[0],\n        city_name: toSplit[1],\n        country_name: toSplit[2],\n        _type: \"city\",\n      });\n      setTripType(query.returnDate === \"none\" ? tripTypes[1] : tripTypes[0]);\n      setTripClass(\n        query.tripClass\n          ? tripClasses.find((t) => t.id === query.tripClass) || tripClasses[0]\n          : tripClasses[0]\n      );\n      setAdults(Number(query.adults) || 1);\n      setChildren(Number(query.children) || 0);\n      setInfants(Number(query.infants) || 0);\n      setDepartureDate(new Date(query.departureDate as string));\n      if (query.returnDate === \"none\") {\n        setReturnDate(null);\n      } else {\n        setReturnDate(new Date(query.returnDate as string));\n      }\n\n      setRedirectToBooking(false);\n      setInitFromQuery(true);\n    }\n  }, [query, initFromQuery]);\n\n  // Sync to globa state\n  useEffect(() => {\n    setSearchState({ from, to, departureDate, returnDate });\n  }, [from, to, departureDate, returnDate, setSearchState]);\n\n  // Trip\n  const [anchorElTrip, setAnchorElTrip] = useState<null | HTMLElement>(null);\n\n  const handleOpenTripMenu = async (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElTrip(event.currentTarget);\n    trackEvent({\n      action: \"handleOpenTripMenu\",\n    });\n  };\n\n  const handleCloseTripMenu = () => {\n    setAnchorElTrip(null);\n    trackEvent({\n      action: \"handleCloseTripMenu\",\n    });\n  };\n\n  const handleTripChange = (trip: any) => {\n    setTripType(trip);\n\n    if (trip.id === ETripTypes.round) {\n      setReturnDate(new Date(new Date().setDate(new Date().getDate() + 21)));\n    } else {\n      setReturnDate(null);\n    }\n\n    trackEvent({\n      action: \"handleTripChange\",\n      label: trip.id,\n    });\n\n    handleCloseTripMenu();\n  };\n\n  // Passengers\n  const [anchorElPassengers, setAnchorElPassengers] =\n    useState<null | HTMLElement>(null);\n\n  const handleOpenPassengersMenu = async (\n    event: React.MouseEvent<HTMLElement>\n  ) => {\n    prevPassengers.current = [adults, children, infants];\n    setAnchorElPassengers(event.currentTarget);\n  };\n\n  const handleClosePassengersMenu = () => {\n    setAnchorElPassengers(null);\n    trackEvent({\n      action: \"handleClosePassengersMenu\",\n    });\n  };\n\n  const handleCancelPassengersMenu = () => {\n    setAdults(prevPassengers.current[0]);\n    setChildren(prevPassengers.current[1]);\n    setInfants(prevPassengers.current[2]);\n    setAnchorElPassengers(null);\n    trackEvent({\n      action: \"handleCancelPassengersMenu\",\n    });\n  };\n\n  // Type\n  const [anchorElType, setAnchorElType] = useState<null | HTMLElement>(null);\n\n  const handleOpenTypeMenu = async (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElType(event.currentTarget);\n    trackEvent({\n      action: \"handleOpenTypeMenu\",\n    });\n  };\n\n  const handleCloseTypeMenu = () => {\n    setAnchorElType(null);\n    trackEvent({\n      action: \"handleCloseTypeMenu\",\n    });\n  };\n\n  const handleTypeChange = (tripC: any) => {\n    setTripClass(tripC);\n    trackEvent({\n      action: \"handleTypeChange\",\n      label: tripC.id,\n    });\n    handleCloseTypeMenu();\n  };\n\n  const startSearch = () => {\n    const searchState = {\n      tripType,\n      tripClass,\n      adults,\n      children,\n      infants,\n      from,\n      to,\n      departureDate,\n      returnDate,\n      redirectToBooking,\n    };\n\n    navigateToSearchResults({\n      searchState,\n      t,\n      push,\n      replace,\n      query,\n    });\n    trackEvent({\n      action: \"startSearch\",\n    });\n    // Recent destination\n    if (localStorage && localStorage.getItem && localStorage.setItem) {\n      const prevDestination = JSON.parse(\n        localStorage.getItem(\"destination\") || \"[]\"\n      );\n      localStorage.setItem(\n        \"destination\",\n        JSON.stringify([{ ...searchState }].concat(prevDestination).slice(0, 3))\n      );\n    }\n  };\n\n  const handleSearch = (e: any) => {\n    e.preventDefault();\n    if (from && to) {\n      startSearch();\n    }\n  };\n\n  const totalPassengers = useMemo(() => {\n    return adults + children + infants;\n  }, [adults, children, infants]);\n\n  return (\n    <Container maxWidth={maxWidth}>\n      <Box sx={{ display: \"inline-block\", my: 1 }}>\n        <Button\n          aria-label=\"menu of trip type\"\n          aria-controls=\"menu-trip-type\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          onClick={handleOpenTripMenu}\n        >\n          <Typography variant=\"button\" textAlign=\"center\">\n            {tripType && t(tripType.i18n)}\n          </Typography>\n          <ArrowDropDown />\n        </Button>\n        <Menu\n          id=\"menu-trip-type\"\n          anchorEl={anchorElTrip}\n          keepMounted\n          open={Boolean(anchorElTrip)}\n          onClose={handleCloseTripMenu}\n        >\n          {tripTypes?.map((trip) => (\n            <MenuItem key={trip.id} onClick={() => handleTripChange(trip)}>\n              <Typography textAlign=\"center\">{t(trip.i18n)}</Typography>\n            </MenuItem>\n          ))}\n        </Menu>\n      </Box>\n\n      <Box sx={{ display: \"inline-block\" }}>\n        <Button\n          size=\"large\"\n          aria-label=\"menu of passengers\"\n          aria-controls=\"menu-passengers\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          onClick={handleOpenPassengersMenu}\n        >\n          {totalPassengers}\n          <Person />\n          <ArrowDropDown />\n        </Button>\n        <Menu\n          id=\"menu-passengers\"\n          anchorEl={anchorElPassengers}\n          keepMounted\n          open={Boolean(anchorElPassengers)}\n          onClose={handleClosePassengersMenu}\n          sx={{ userSelect: \"none\" }}\n        >\n          <Box sx={{ px: 2 }}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                mb: 1,\n              }}\n            >\n              <Box sx={{ flex: 1, mx: 2 }}>{t(\"adults\")}</Box>\n              <CounterInput\n                min={1}\n                max={9}\n                value={adults}\n                onChange={(count: number) => {\n                  setAdults(count);\n                  trackEvent({\n                    action: \"setAdults\",\n                    label: String(count),\n                  });\n                }}\n              />\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                mb: 1,\n              }}\n            >\n              <Box sx={{ flex: 1, mx: 2 }}>\n                {t(\"children\")}\n                <div>2-12</div>\n              </Box>\n              <CounterInput\n                min={0}\n                max={6}\n                value={children}\n                onChange={(count: number) => {\n                  setChildren(count);\n                  trackEvent({\n                    action: \"setChildren\",\n                    label: String(count),\n                  });\n                }}\n              />\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                mb: 1,\n              }}\n            >\n              <Box sx={{ flex: 1, mx: 2 }}>\n                {t(\"infants\")}\n                <div>0-2</div>\n              </Box>\n              <CounterInput\n                min={0}\n                max={6}\n                value={infants}\n                onChange={(count: number) => {\n                  setInfants(count);\n                  trackEvent({\n                    action: \"setInfants\",\n                    label: String(count),\n                  });\n                }}\n              />\n            </Box>\n          </Box>\n          <Divider sx={{ my: 2 }} />\n          <Box\n            sx={{\n              mx: 2,\n              mb: 1,\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Button\n              variant=\"outlined\"\n              size=\"small\"\n              onClick={handleCancelPassengersMenu}\n            >\n              {t(\"misc-cancel\")}\n            </Button>\n            <Button\n              variant=\"contained\"\n              disableElevation\n              size=\"small\"\n              onClick={handleClosePassengersMenu}\n            >\n              {t(\"misc-apply\")}\n            </Button>\n          </Box>\n        </Menu>\n      </Box>\n\n      <Box sx={{ display: \"inline-block\" }}>\n        <Button\n          aria-label=\"menu of trip class\"\n          aria-controls=\"menu-trip-class\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          onClick={handleOpenTypeMenu}\n        >\n          <Typography variant=\"button\" textAlign=\"center\">\n            {tripClass && t(tripClass.i18n)}\n          </Typography>\n          <ArrowDropDown />\n        </Button>\n        <Menu\n          id=\"menu-trip-class\"\n          anchorEl={anchorElType}\n          keepMounted\n          open={Boolean(anchorElType)}\n          onClose={handleCloseTypeMenu}\n        >\n          {tripClasses?.map((tripC) => (\n            <MenuItem key={tripC.id} onClick={() => handleTypeChange(tripC)}>\n              <Typography textAlign=\"center\">{t(tripC.i18n)}</Typography>\n            </MenuItem>\n          ))}\n        </Menu>\n      </Box>\n      <Box component=\"form\" onSubmit={handleSearch}>\n        <Stack\n          direction={{ xs: \"column\", lg: \"row\" }}\n          spacing={{ xs: 2, lg: 2 }}\n        >\n          {/* <Box sx={{ flex: \"30%\", position: \"relative\" }}> */}\n          <SearchLocation\n            initialValue={from}\n            placeholder={t(\"where-from-?\")}\n            onChange={(v: any) => {\n              setFrom(v);\n              if (v) {\n                trackEvent({\n                  action: \"setFrom\",\n                  label: v.code,\n                });\n              }\n            }}\n          />\n          {/* \n            {userLocation && from?.code !== userLocation.code && (\n              <Box\n                sx={{\n                  position: \"absolute\",\n                  bottom: 0,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  fontSize: 14,\n                }}\n              >\n                <Chip label=\"Tip\" size=\"small\" sx={{ mr: 1 }} />\n                <Link\n                  component=\"button\"\n                  variant=\"body2\"\n                  onClick={() => {\n                    setFrom({\n                      ...location,\n                      city_code: userLocation.code,\n                      code: userLocation.code,\n                      city_name: userLocation.name,\n                      country_name: userLocation.country_name,\n                      _type: \"city\",\n                    });\n                  }}\n                  type=\"button\"\n                >\n\n                  {userLocation.name}, {userLocation.country_name}\n                </Link>\n              </Box>\n            )}\n            {userLocation && <Box sx={{ py: { xs: 2, lg: 0 } }}></Box>}\n          </Box> */}\n          <SearchLocation\n            initialValue={to}\n            placeholder={t(\"where-to-?\")}\n            onChange={(v: any) => {\n              setTo(v);\n              if (v) {\n                trackEvent({\n                  action: \"setTo\",\n                  label: v.code,\n                });\n              }\n            }}\n          />\n          {tripType.id === tripTypes[0].id && (\n            <DatePickerWithLoclae\n              value={[departureDate, returnDate]}\n              onChange={([depD, retD]) => {\n                setDepartureDate(depD);\n                setReturnDate(retD);\n              }}\n            />\n          )}\n          {tripType.id === tripTypes[1].id && (\n            <>\n              <FlightDatePicker\n                label={t(\"departure-date-?\")}\n                value={departureDate}\n                onChange={(newValue: Date | null) => {\n                  setDepartureDate(newValue);\n                  trackEvent({\n                    action: \"setDepartureDate\",\n                    label: String(newValue),\n                  });\n                }}\n                from={from}\n                to={to}\n                rates={rates}\n              />\n              {/* <FlightDatePicker\n                label={t(\"return-date-?\")}\n                value={returnDate}\n                minDate={departureDate}\n                onChange={(newValue: Date | null) => {\n                  setReturnDate(newValue);\n                  if (tripType.id !== ETripTypes.round) {\n                    setTripType(tripTypes[0]);\n                  }\n                  trackEvent({\n                    action: \"setReturnDate\",\n                    label: String(newValue),\n                  });\n                }}\n                from={from}\n                to={to}\n                rates={rates}\n              /> */}\n            </>\n          )}\n          <Button variant=\"contained\" type=\"submit\">\n            <Search />\n            {t(\"home-page-search-btn\")}\n          </Button>\n        </Stack>\n        {showBooking && (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: { xs: \"flex-start\", lg: \"flex-end\" },\n            }}\n          >\n            <FormControlLabel\n              sx={{\n                userSelect: \"none\",\n                mr: 0,\n                py: 1,\n                \"& .MuiFormControlLabel-label\": { fontSize: 14 },\n              }}\n              control={\n                <Checkbox\n                  size=\"small\"\n                  defaultChecked={redirectToBooking}\n                  onChange={(e) => {\n                    setRedirectToBooking(!!e.target.checked);\n                    trackEvent({\n                      action: \"setRedirectToBooking\",\n                      label: String(!!e.target.checked),\n                    });\n                  }}\n                />\n              }\n              label=\"Check accommodation with Booking.com\"\n            />\n          </Box>\n        )}\n      </Box>\n    </Container>\n  );\n};\nexport default SearchForm;\n","import { useRouter } from \"next/router\";\nimport { useSWRNFetchImmutable } from \"./useSwr\";\n\nexport const useWhoami = ({ shouldFetch = false }) => {\n  const { locale } = useRouter();\n  const { data, error } = useSWRNFetchImmutable(\n    shouldFetch === undefined || shouldFetch === true\n      ? `https://www.travelpayouts.com/whereami?locale=${locale}`\n      : \"\"\n  );\n\n  return {\n    data,\n    isLoading: !error && !data,\n    isError: error,\n  };\n};\n","import { useSWRNFetchImmutable } from \"./useSwr\";\n\ntype useRatesType = {\n  toFetch?: boolean;\n};\n\nexport const useRates = ({ toFetch = undefined }: useRatesType = {}) => {\n  const { data, error } = useSWRNFetchImmutable(\n    toFetch === undefined || toFetch === true\n      ? `https://apiv2.flightscanner.com/rates`\n      : \"\"\n  );\n\n  return {\n    data,\n    isLoading: !error && !data,\n    isError: error,\n  };\n};\n","// import useSWR from \"swr\";\nimport useSWRImmutable from \"swr/immutable\";\nimport fetchWithRetry from \"fetch-retry\";\nimport { retryConfig } from \"../utils\";\n\nexport const fetcher = (input: RequestInfo) =>\n  fetchWithRetry(fetch)(input, { ...retryConfig }).then((res) => res.json());\n\nexport const useSWRNFetchImmutable = (api: string | string[] | null) =>\n  useSWRImmutable(api, fetcher);\n\n"],"names":["footers","title","description","name","link","externalLink","Footer","t","useTranslations","Box","component","Divider","Container","maxWidth","sx","py","display","flexWrap","map","footer","padding","flex","Typography","variant","color","gutterBottom","item","Link","target","href","underline","onClick","trackEvent","action","label","justifyContent","p","value","Date","getFullYear","getOptionLabelFn","option","_type","code","country_name","city_name","parseCity","SearchLocation","placeholder","initialValue","onChange","locale","useRouter","useState","setValue","inputValue","setInputValue","options","setOptions","shouldFetch","useRef","fetchData","useMemo","throttle","request","callback","fetchWithRetry","fetch","input","retryConfig","then","res","json","catch","error","captureException","useEffect","active","current","results","newOptions","forceUpdate","newValue","Autocomplete","blurOnSelect","size","aria-required","getOptionLabel","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","event","onInputChange","newInputValue","r","renderOption","props","optionString","li","alignItems","FlightIcon","PlaceIcon","mx","renderInput","params","TextField","ref","InputProps","fullWidth","required","InputLabelProps","shrink","CounterInput","min","max","Stack","direction","spacing","IconButton","aria-label","disabled","RemoveIcon","AddIcon","FlightDatePicker","from","to","rates","minDate","maxDate","setMonth","getMonth","React","isOpen","setIsOpen","useRates","toFetch","ratesFromApi","data","isLoadingRates","isLoading","currency","useGlobal","intl","useIntl","ratesOr","requestAbortController","setIsLoading","prices","setPrices","fetchPrices","date","controller","AbortController","month","UTC","toISOString","split","signal","length","pricesLength","pricesByDay","sort","a","b","price","forEach","index","depart_date","String","getDate","isLow","Math","round","abort","MobileDatePicker","showToolbar","views","orientation","loading","onOpen","onClose","renderLoading","CalendarPickerSkeleton","disableHighlightToday","onMonthChange","renderDay","day","_value","DayComponentProps","priceForDay","priceFormatted","formatNumber","toLowerCase","style","maximumFractionDigits","minimumFractionDigits","position","PickersDay","today","outsideCurrentMonth","bottom","fontSize","lineHeight","zIndex","borderRadius","toString","ETripTypes","oneWay","multiCity","ESuggestionsTypes","StopsTypes","ETripClass","tripTypes","id","i18n","tripClasses","economy","business","DatePickerWithLoclae","cheap","popular","nonStop","oneStop","twoStops","values","dateLocaleFile","LocalizationProvider","dateAdapter","AdapterDateFns","localeText","start","end","adapterLocale","DateRangePicker","startProps","endProps","ml","location","showBooking","initalFrom","initialTo","query","push","replace","setSearchState","userLocation","useWhoami","setLocationOnce","tripType","setTripType","tripClass","setTripClass","adults","setAdults","children","setChildren","infants","setInfants","setFrom","setTo","initFromQuery","setInitFromQuery","setDate","departureDate","setDepartureDate","returnDate","setReturnDate","redirectToBooking","setRedirectToBooking","prevPassengers","city_code","iata","decodeURIComponent","fromSplit","toSplit","find","Number","anchorElTrip","setAnchorElTrip","handleOpenTripMenu","currentTarget","handleCloseTripMenu","anchorElPassengers","setAnchorElPassengers","handleOpenPassengersMenu","handleClosePassengersMenu","anchorElType","setAnchorElType","handleOpenTypeMenu","handleCloseTypeMenu","totalPassengers","my","Button","aria-controls","aria-haspopup","textAlign","ArrowDropDown","Menu","anchorEl","keepMounted","open","Boolean","trip","MenuItem","handleTripChange","Person","userSelect","px","flexDirection","mb","count","div","disableElevation","tripC","handleTypeChange","onSubmit","e","preventDefault","searchState","navigateToSearchResults","localStorage","getItem","setItem","prevDestination","JSON","parse","stringify","concat","slice","startSearch","xs","lg","v","retD","depD","type","Search","FormControlLabel","mr","control","Checkbox","defaultChecked","checked","useSWRNFetchImmutable","undefined","isError","fetcher","api","useSWRImmutable"],"sourceRoot":""}