{"version":3,"file":"static/chunks/pages/404-74a81da49dae182b.js","mappings":"uFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,OACA,WACE,OAAO,EAAQ,U,iKCCR,SAASC,IACtB,OAAM,UACHC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,cAAe,U,oBACxFC,KAAE,C,SAAC,0B,SACHC,EAAAA,EAAI,CAACC,KAAK,I,SAAI,wB,85BCDrB,IAAMC,GAASC,E,SAAAA,IAAO,IAAPA,CAAY,IASdC,EAAmBC,EAAAA,YAC9B,SAA0BC,EAAOC,GAC/B,IAAQC,EAAqEF,EAArEE,GAAIC,EAAiEH,EAAjEG,OAAQC,EAAyDJ,EAAzDI,QAASC,EAAgDL,EAAhDK,OAAQC,EAAwCN,EAAxCM,QAASC,EAA+BP,EAA/BO,SAAUC,EAAqBR,EAArBQ,OAAWC,EAAK,EAAKT,EAAK,CAA1EE,KAAIC,SAAQC,UAASC,SAAQC,UAASC,WAAUC,WAExD,OAAM,SACHE,EAAAA,QAAQ,CACPf,KAAMO,EACNK,SAAUA,EACVI,GAAIR,EACJC,QAASA,EACTC,OAAQA,EACRC,QAASA,EACTM,UAAQ,EACRJ,OAAQA,E,mBAEPZ,EAAM,GAACK,IAAKA,GAASQ,SAiBxBf,EAAOK,EAAAA,YAA+C,SAAcC,EAAOC,GAC/E,IAAM,EAcFD,EAbFa,gBAAAA,OAAe,IAAG,WAAQ,EAC1BF,EAYEX,EAZFW,GACWG,EAWTd,EAXFe,UACApB,EAUEK,EAVFL,KACQqB,EASNhB,EATFG,OACAK,EAQER,EARFQ,OACAS,EAOEjB,EAPFiB,YACAV,EAMEP,EANFO,SACAH,EAKEJ,EALFI,QAEAC,GAGEL,EAJFkB,KAIElB,EAHFK,QACAC,EAEEN,EAFFM,QACGG,EAAK,EACNT,EAAK,CAbPa,kBACAF,KACAI,YACApB,OACAQ,SACAK,SACAS,cACAV,WACAH,UACAc,OACAb,SACAC,YAIIa,GAASC,EAAAA,EAAAA,aACTC,EAA2B,kBAAT1B,EAAoBA,EAAOA,EAAK0B,SAClDN,GAAYO,EAAAA,EAAAA,GAAKR,EAAgB,EAAF,GAClCD,EAAkBM,EAAOE,WAAaA,GAAYR,IAMrD,GAFkB,kBAATlB,IAA+C,IAAzBA,EAAK4B,QAAQ,SAA6C,IAA5B5B,EAAK4B,QAAQ,YAGxE,OAAIN,GACI,SAAErB,EAAM,GAACmB,UAAWA,EAAWpB,KAAMA,EAAMM,IAAKA,GAASQ,KAG3D,SAAEe,EAAAA,EAAO,GAACT,UAAWA,EAAWpB,KAAMA,EAAMM,IAAKA,GAASQ,IAGlE,IACMgB,EAAc,CAAEvB,GAAIP,EAAMQ,OADjBa,GAAcL,EACWP,QAAAA,EAASC,OAAAA,EAAQC,QAAAA,EAASC,SAAAA,EAAUC,OAAAA,GAE5E,OAAIS,GACI,SAAEnB,EAAgB,GAACiB,UAAWA,EAAWd,IAAKA,GAASwB,EAAiBhB,KAG1E,SACHe,EAAAA,EAAO,GACNE,UAAW5B,EACXiB,UAAWA,EACXd,IAAKA,GACDwB,EACAhB,OAKV,Q","sources":["webpack://_N_E/?d97c","webpack://_N_E/./pages/404.tsx","webpack://_N_E/./src/components/Link.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/404\",\n      function () {\n        return require(\"private-next-pages/404.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/404\"])\n      });\n    }\n  ","import Box from \"@mui/material/Box\";\nimport { GetStaticPropsContext } from \"next/types\";\nimport React from \"react\";\nimport Link from \"../src/components/Link\";\n\nexport default function Custom404() {\n  return (\n    <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\n      <h1>404 - Page Not Found</h1>\n      <Link href=\"/\">Go to homepage</Link>\n    </Box>\n  );\n}\n\nexport async function getStaticProps({ locale }: GetStaticPropsContext) {\n  return {\n    props: {\n      // You can get the messages from anywhere you like. The recommended\n      // pattern is to put them in JSON files separated by language and read\n      // the desired one based on the `locale` received from Next.js.\n      messages: (await import(`../messages/index/${locale || 'en'}.json`)).default,\n    },\n  };\n}\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink, { LinkProps as NextLinkProps } from 'next/link';\nimport MuiLink, { LinkProps as MuiLinkProps } from '@mui/material/Link';\nimport { styled } from '@mui/material/styles';\n\n// Add support for the sx prop for consistency with the other branches.\nconst Anchor = styled('a')({});\n\ninterface NextLinkComposedProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'href'>,\n    Omit<NextLinkProps, 'href' | 'as'> {\n  to: NextLinkProps['href'];\n  linkAs?: NextLinkProps['as'];\n}\n\nexport const NextLinkComposed = React.forwardRef<HTMLAnchorElement, NextLinkComposedProps>(\n  function NextLinkComposed(props, ref) {\n    const { to, linkAs, replace, scroll, shallow, prefetch, locale, ...other } = props;\n\n    return (\n      <NextLink\n        href={to}\n        prefetch={prefetch}\n        as={linkAs}\n        replace={replace}\n        scroll={scroll}\n        shallow={shallow}\n        passHref\n        locale={locale}\n      >\n        <Anchor ref={ref} {...other} />\n      </NextLink>\n    );\n  },\n);\n\nexport type LinkProps = {\n  activeClassName?: string;\n  as?: NextLinkProps['as'];\n  href: NextLinkProps['href'];\n  linkAs?: NextLinkProps['as']; // Useful when the as prop is shallow by styled().\n  noLinkStyle?: boolean;\n} & Omit<NextLinkComposedProps, 'to' | 'linkAs' | 'href'> &\n  Omit<MuiLinkProps, 'href'>;\n\n// A styled version of the Next.js Link component:\n// https://nextjs.org/docs/api-reference/next/link\nconst Link = React.forwardRef<HTMLAnchorElement, LinkProps>(function Link(props, ref) {\n  const {\n    activeClassName = 'active',\n    as,\n    className: classNameProps,\n    href,\n    linkAs: linkAsProp,\n    locale,\n    noLinkStyle,\n    prefetch,\n    replace,\n    role, // Link don't have roles.\n    scroll,\n    shallow,\n    ...other\n  } = props;\n\n  const router = useRouter();\n  const pathname = typeof href === 'string' ? href : href.pathname;\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === pathname && activeClassName,\n  });\n\n  const isExternal =\n    typeof href === 'string' && (href.indexOf('http') === 0 || href.indexOf('mailto:') === 0);\n\n  if (isExternal) {\n    if (noLinkStyle) {\n      return <Anchor className={className} href={href} ref={ref} {...other} />;\n    }\n\n    return <MuiLink className={className} href={href} ref={ref} {...other} />;\n  }\n\n  const linkAs = linkAsProp || as;\n  const nextjsProps = { to: href, linkAs, replace, scroll, shallow, prefetch, locale };\n\n  if (noLinkStyle) {\n    return <NextLinkComposed className={className} ref={ref} {...nextjsProps} {...other} />;\n  }\n\n  return (\n    <MuiLink\n      component={NextLinkComposed}\n      className={className}\n      ref={ref}\n      {...nextjsProps}\n      {...other}\n    />\n  );\n});\n\nexport default Link;\n"],"names":["window","__NEXT_P","push","Custom404","Box","sx","display","justifyContent","alignItems","flexDirection","h1","Link","href","Anchor","styled","NextLinkComposed","React","props","ref","to","linkAs","replace","scroll","shallow","prefetch","locale","other","NextLink","as","passHref","activeClassName","classNameProps","className","linkAsProp","noLinkStyle","role","router","useRouter","pathname","clsx","indexOf","MuiLink","nextjsProps","component"],"sourceRoot":""}