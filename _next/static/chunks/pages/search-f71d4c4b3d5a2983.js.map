{"version":3,"file":"static/chunks/pages/search-f71d4c4b3d5a2983.js","mappings":"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","sources":["webpack://_N_E/?8289","webpack://_N_E/./src/components/LazyBookUpsell.tsx","webpack://_N_E/./src/components/FlightTickets.tsx","webpack://_N_E/./pages/search.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/search\",\n      function () {\n        return require(\"private-next-pages/search.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/search\"])\n      });\n    }\n  ","import dynamic from \"next/dynamic\";\n\nconst BookUpsell = dynamic(() => import(\"./BookUpsell\"));\n\nexport const LazyBookUpsell = ({\n  isOpen,\n  handleClose,\n}: any) => {\n  return <BookUpsell isOpen={isOpen} handleClose={handleClose} />;\n};\n","import Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Stack from \"@mui/material/Stack\";\nimport React, {\n  useMemo,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport Image from \"next/image\";\nimport { Typography } from \"@mui/material\";\nimport { useIntl, useTranslations } from \"next-intl\";\nimport toDate from \"date-fns/toDate\";\n\nimport { useTheme } from \"../theme\";\nimport Button from \"@mui/material/Button\";\nimport { useGlobal } from \"../context\";\nimport { retryConfig, secondsToTime } from \"../utils\";\nimport IconButton from \"@mui/material/IconButton\";\nimport KeyboardArrowDown from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUp from \"@mui/icons-material/KeyboardArrowUp\";\nimport FlightTakeoff from \"@mui/icons-material/FlightTakeoff\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\nimport FlightLandIcon from \"@mui/icons-material/FlightLand\";\nimport Divider from \"@mui/material/Divider\";\nimport Chip from \"@mui/material/Chip\";\nimport { LazyBookUpsell } from \"./LazyBookUpsell\";\nimport { useRouter } from \"next/router\";\nimport fetchWithRetry from \"fetch-retry\";\nimport { captureException } from \"@sentry/nextjs\";\n\n\n// Steps for tracking\n// 1. alawys generate subId, if we have gclid we just send it as well to backend\n// can we use searchId as subId? (or it has to be provided before hand) -> yes before\n// The subid is for travelpayouts gclid will go to our DB\n// we need destination details e.g. from to and dates\n// we need the term clicked (agent details airline etc price)\n// we gonna have sometimes multiple for this route clicks \n// with long enough time it would be just one and we can match the shitty agent to avoid\n// becaue sometimes $5 per ticket is better than 0.5$ so we need a ranking mechanism \n// show best and inside show all of them, and hide the really shitty ones if the price isn't cheap anywqy\n\n\n\nconst sortTerms = (terms: any, globalGates: any) => {\n  return Object.keys(terms)\n    .map((key) => {\n      const value = terms[key];\n      return {\n        ...value,\n        agent_id: key,\n      };\n    })\n    .sort((a, b) => {\n      // const agentA = globalGates[a.agent_id];\n      // const agentB = globalGates[b.agent_id];\n\n      // Sort kiwi on top\n      // if (agentA.is_kiwi) {\n      //   return -1;\n      // } else if (agentB.is_kiwi) {\n      //   return 1;\n      // }\n\n      // Sort airline on top\n      // if (agentA.is_airline) {\n      //   return -1;\n      // } else if (agentB.is_airline) {\n      //   return 1;\n      // }\n\n      // Sort by price\n      return a.unified_price - b.unified_price;\n    });\n};\n\nconst DotSeperator = () => (\n  <Box className=\"dot-seprator\" sx={{ mx: 1, display: \"inline-block\" }}></Box>\n);\n\nexport const FlightTicket = ({\n  ticket,\n  globalGates,\n  globalAirlines,\n  globalAirports,\n  rates,\n  searchId,\n  handleOnBuy,\n}: any) => {\n  const ref = useRef<any>();\n  const intl = useIntl();\n  const t = useTranslations();\n  const theme = useTheme();\n  const { currency } = useGlobal();\n  const { push } = useRouter();\n  const [exapnded, setExpanded] = useState<boolean>(false);\n\n  const handleExpand = () => {\n    setExpanded((isExpanded: boolean) => !isExpanded);\n  };\n\n  useEffect(() => {\n    if (exapnded) {\n      ref.current.scrollIntoView && ref.current.scrollIntoView();\n    }\n  }, [exapnded]);\n\n  const sortedTerms: any[] = useMemo(() => {\n    // If tickeet pprice over 200 usd filter shiity agents\n    // if wee filtered all offers keep all of them (cant do shit)\n    // Works but a bug in tabs sortted by\n    // const ticketPriceInUsdOver200 = Object.values(ticket.terms).find(\n    //   (t: any) => t.unified_price / rates[\"usd\"] > 200\n    // );\n    // if (ticketPriceInUsdOver200) {\n    //   const filteredTerms = { ...ticket.terms };\n    //   const blackList = [112, 132, 362,  ];\n    //   blackList.forEach((black) => {\n    //     delete filteredTerms[black];\n    //   });\n    //   const finalTerms =\n    //     Object.keys(filteredTerms).length > 0 ? filteredTerms : ticket.terms;\n    //   return sortTerms(finalTerms, globalGates);\n    // }\n\n    return sortTerms(ticket.terms, globalGates);\n  }, [ticket.terms, globalGates, rates]);\n\n  const firstTerm: any = useMemo(\n    () => sortedTerms.slice(0, 1)[0],\n    [sortedTerms]\n  );\n\n  const [airlinesForSegment, airlinesNamesForSegment] = useMemo(() => {\n    const airlinesForSegment: any[] = [];\n    const airlinesNamesForSegment: any[] = [];\n\n    ticket.segment.forEach((segment: any) => {\n      const uniqueAirlines: any[] = [];\n      const airlines: any[] = [];\n      const airlinesNames: any[] = [];\n\n      segment.flight.forEach((flight: any) => {\n        const airlineCode = flight.marketing_carrier || flight.operating_carrier || flight.operated_by;\n\n        if (uniqueAirlines.indexOf(airlineCode) === -1) {\n          uniqueAirlines.push(airlineCode);\n          airlines.push({\n            ...globalAirlines[airlineCode],\n            _code: airlineCode,\n          });\n\n          airlinesNames.push(\n            globalAirlines[airlineCode] && globalAirlines[airlineCode].name\n          );\n        }\n\n        // Airlines for segment\n        airlinesForSegment.push(airlines);\n\n        // Airlines names for segment\n        airlinesNamesForSegment.push(airlinesNames);\n      });\n    });\n    return [airlinesForSegment, airlinesNamesForSegment];\n  }, [ticket.segment, globalAirlines]);\n\n  const handleBuy = (e: any, term: any, searchId: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (term.agent_id == 1337) {\n      return window.open(\"/booking?offerId=\" + term.url);\n    }\n\n    window.open(\n      String(term.url).includes(\"http\")\n        ? term.url\n        : `https://flightscanner.com/redirect?searchId=${searchId}&termId=${term.url\n        }&label=${globalGates[term.agent_id]?.label}`\n    );\n    handleOnBuy(ticket, term);\n  };\n\n  return (\n    <Paper\n      ref={ref}\n      sx={{\n        padding: 2,\n        cursor: \"pointer\",\n        border: \"1px solid transparent\",\n        borderColor: exapnded ? \"primary.main\" : \"transparent\",\n      }}\n      elevation={2}\n      onClick={handleExpand}\n    >\n      <Stack direction={{ xs: \"column\", sm: \"row\" }}>\n        <Stack\n          spacing={1}\n          direction=\"column\"\n          sx={{ flex: 1, justifyContent: \"center\" }}\n        >\n          {ticket.segment.map((segment: any, index: number) => {\n            const airlineLogos = airlinesForSegment[index];\n            return (\n              <Stack\n                direction=\"row\"\n                sx={{ alignItems: \"center\" }}\n                key={index}\n                spacing={1}\n              >\n                <Box sx={{ flex: 1 }}>\n                  <Box\n                    sx={\n                      {\n                        // display: \"flex\",\n                        // alignItems: \"stretch\",\n                        // placeContent: \"stretch space-between\",\n                        // flexFlow: \"column wrap\",\n                        // backgroungColor: \"transparent\",\n                        // height: 32,\n                        // width: 32,\n                        // overflow: \"hidden\",\n                      }\n                    }\n                  >\n                    {airlineLogos.map((airlineLogo: any) => {\n                      return (\n                        <Image\n                          key={airlineLogo._code}\n                          src={`https://images.kiwi.com/airlines/32/${airlineLogo._code}.png?default=airline.png`}\n                          alt={airlineLogo.name}\n                          width={airlineLogos.length > 1 ? 16 : 32}\n                          height={airlineLogos.length > 1 ? 16 : 32}\n                        />\n                      );\n                    })}\n                  </Box>\n                  <Typography\n                    noWrap\n                    variant=\"body2\"\n                    sx={{ display: { xs: \"none\", sm: \"block\" }, maxWidth: 100 }}\n                  >\n                    {airlinesNamesForSegment[index].join(\", \")}\n                  </Typography>\n                </Box>\n                <Box sx={{ flex: 2 }}>\n                  <Typography\n                    sx={{\n                      fontSize: { xs: 14, sm: 16 },\n                      fontWeight: \"bold\",\n                    }}\n                    gutterBottom\n                  >\n                    {segment.flight[0].departure_time} -{\" \"}\n                    {segment.flight[segment.flight.length - 1].arrival_time}\n                  </Typography>\n                  <Typography\n                    sx={{ fontSize: { xs: 12, sm: 14 } }}\n                    variant=\"body2\"\n                  >\n                    {intl.formatDateTime(\n                      toDate(\n                        segment.flight[0].local_departure_timestamp * 1000\n                      ),\n                      {\n                        month: \"short\",\n                        day: \"numeric\",\n                        weekday: \"short\",\n                      }\n                    )}\n                  </Typography>\n                </Box>\n\n                <Box sx={{ flex: { xs: 2, sm: 3 } }}>\n                  <Typography\n                    sx={{\n                      fontSize: { xs: 14, sm: 16 },\n                      fontWeight: \"bold\",\n                    }}\n                    gutterBottom\n                  >\n                    {secondsToTime(ticket.segment_durations[index] * 60)}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    sx={{ fontSize: { xs: 12, sm: 14 } }}\n                  >\n                    <Box\n                      sx={{\n                        display: { xs: \"none\", sm: \"inline-block\" },\n                      }}\n                    >\n                      {globalAirports[segment.flight[0].departure].city} (\n                      {segment.flight[0].departure})\n                    </Box>\n                    <Box\n                      sx={{\n                        display: { xs: \"inline-block\", sm: \"none\" },\n                      }}\n                    >\n                      {segment.flight[0].departure}\n                    </Box>\n                    {segment.flight.length - 1 === 0 && (\n                      <svg\n                        style={{\n                          width: 24,\n                          height: \"1rem\",\n                          verticalAlign: \"middle\",\n                          fill: \"currentColor\",\n                        }}\n                        viewBox=\"0 0 24 24\"\n                        preserveAspectRatio=\"xMidYMid meet\"\n                      >\n                        <path d=\"M18.688 9.688c-.125 0-.25.063-.375.188-.25.25-.25.563 0 .813l.75.75H3.25v1.125h15.813l-.75.75c-.25.25-.25.563 0 .813.125.125.188.188.375.188a.57.57 0 0 0 .438-.188l1.563-1.625c.188-.125.188-.313.188-.5a.71.71 0 0 0-.188-.5l-1.563-1.625a.677.677 0 0 0-.438-.188v-.001z\"></path>\n                      </svg>\n                    )}\n                    {segment.flight.length - 1 === 1 && (\n                      <svg\n                        style={{\n                          width: 24,\n                          height: \"1rem\",\n                          verticalAlign: \"middle\",\n                          fill: \"currentColor\",\n                        }}\n                        viewBox=\"0 0 24 24\"\n                        preserveAspectRatio=\"xMidYMid meet\"\n                      >\n                        <path d=\"M18.688 9.688c-.125 0-.25.063-.375.188-.25.25-.25.563 0 .813l.75.75h-6.188a1.69 1.69 0 0 0-1.625-1.125c-.688 0-1.375.438-1.625 1.125H3.25v1.125h6.375c.25.688.938 1.125 1.625 1.125.75 0 1.375-.438 1.625-1.125h6.188l-.75.75c-.25.25-.25.563 0 .813.125.125.188.188.375.188a.57.57 0 0 0 .438-.188l1.563-1.625c.188-.125.188-.313.188-.5a.71.71 0 0 0-.188-.5l-1.563-1.625a.677.677 0 0 0-.438-.188v-.001z\"></path>\n                      </svg>\n                    )}\n                    {segment.flight.length - 1 > 1 && (\n                      <svg\n                        style={{\n                          width: 24,\n                          height: \"1rem\",\n                          verticalAlign: \"middle\",\n                          fill: \"currentColor\",\n                        }}\n                        viewBox=\"0 0 24 24\"\n                        preserveAspectRatio=\"xMidYMid meet\"\n                      >\n                        <path d=\"M18.439 10c-.125 0-.25.063-.375.188-.25.25-.25.563 0 .813l.75.75h-3c-.25-.688-.875-1.125-1.563-1.125-.75 0-1.375.438-1.625 1.125H9.688a1.69 1.69 0 0 0-1.625-1.125c-.688 0-1.313.438-1.563 1.125H3v1.125h3.5c.25.688.875 1.125 1.563 1.125.75 0 1.375-.438 1.625-1.125h2.938a1.69 1.69 0 0 0 1.625 1.125c.688 0 1.313-.438 1.563-1.125h3l-.75.75c-.25.25-.25.563 0 .813.125.125.188.188.375.188a.57.57 0 0 0 .438-.188l1.563-1.625c.188-.125.188-.313.188-.5a.71.71 0 0 0-.188-.5l-1.563-1.625a.677.677 0 0 0-.438-.188V10z\"></path>\n                      </svg>\n                    )}\n                    <Box\n                      sx={{\n                        display: { xs: \"none\", sm: \"inline-block\" },\n                      }}\n                    >\n                      {\n                        globalAirports[\n                          segment.flight[segment.flight.length - 1].arrival\n                        ].city\n                      }{\" \"}\n                      ({segment.flight[segment.flight.length - 1].arrival})\n                    </Box>\n                    <Box\n                      sx={{\n                        display: { xs: \"inline-block\", sm: \"none\" },\n                      }}\n                    >\n                      {segment.flight[segment.flight.length - 1].arrival}\n                    </Box>\n                  </Typography>\n                </Box>\n              </Stack>\n            );\n          })}\n        </Stack>\n        <Divider sx={{ my: 2, display: { xs: \"hidden\", sm: \"block\" } }} />\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n              ml: { xs: \"24px\" },\n              mr: { xs: \"16px\" },\n            }}\n          >\n            <Typography variant=\"h6\" gutterBottom>\n              {rates &&\n                currency &&\n                intl.formatNumber(\n                  firstTerm.unified_price / rates[currency.code.toLowerCase()],\n                  {\n                    style: \"currency\",\n                    currency: currency.code,\n                    maximumFractionDigits: 0,\n                    minimumFractionDigits: 0,\n                  }\n                )}\n            </Typography>\n            <Button\n              variant=\"contained\"\n              sx={{ width: 160, flexDirection: \"column\" }}\n              onClick={(e) => {\n                handleBuy(e, firstTerm, searchId);\n              }}\n            >\n              <Typography>{t(\"search-results-book-now\")}</Typography>\n              <Typography>\n                {firstTerm && globalGates[firstTerm.agent_id]?.label}\n              </Typography>\n            </Button>\n            {sortedTerms.length > 1 && (\n              <Typography\n                variant=\"body2\"\n                sx={{ fontSize: { xs: 12, sm: 14 }, mt: 1 }}\n              >\n                {t(\"search-results-more-proposals\", {\n                  value: sortedTerms.length - 1,\n                })}\n              </Typography>\n            )}\n          </Box>\n          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n            <IconButton aria-label=\"expand\">\n              {exapnded ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n            </IconButton>\n          </Box>\n        </Box>\n      </Stack>\n      {exapnded && (\n        <Box\n          sx={{\n            backgroundColor:\n              theme.palette.mode === \"light\" ? \"#F3F6F9\" : \"inherit\",\n            margin: -2,\n            padding: 2,\n            mt: 2,\n            borderBottomLeftRadius: 3,\n            borderBottomRightRadius: 3,\n          }}\n        >\n          <Stack spacing={1}>\n            <Paper>\n              <Box sx={{ p: 2 }}>\n                <Typography\n                  sx={{\n                    fontSize: { xs: 14, sm: 16 },\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  <span>{t(\"flights-departure\")}</span>\n                  <style global jsx>{`\n                    .dot-seprator:before {\n                      content: \"\\b7\";\n                    }\n                  `}</style>\n                  <Box\n                    className=\"dot-seprator\"\n                    sx={{ mx: 1, display: \"inline-block\" }}\n                  ></Box>\n                  <span>\n                    {intl.formatDateTime(\n                      toDate(\n                        ticket.segment[0].flight[0].local_departure_timestamp *\n                        1000\n                      ),\n                      {\n                        month: \"short\",\n                        day: \"numeric\",\n                        weekday: \"short\",\n                      }\n                    )}\n                  </span>\n                </Typography>\n                <Typography\n                  sx={{ fontSize: { xs: 12, sm: 14 } }}\n                  variant=\"body2\"\n                >\n                  {secondsToTime(ticket.segment_durations[0] * 60)}\n                  <Box\n                    className=\"dot-seprator\"\n                    sx={{ mx: 1, display: \"inline-block\" }}\n                  ></Box>\n                  {t(\"search-results-flight-details-stops\", {\n                    value: ticket.segment[0].flight.length - 1,\n                    value2: ticket.max_stops,\n                  })}\n                </Typography>\n                <Divider sx={{ my: 1 }} />\n                {ticket.segment[0].flight.map((flight: any, i: number) => {\n                  const __airlineCode = flight.marketing_carrier || flight.operating_carrier || flight.operated_by;\n                  return (\n                    <Box key={i}>\n                      <Box\n                        component=\"ul\"\n                        sx={{ fontSize: 14, listStyle: \"none\", padding: 0 }}\n                      >\n                        <Box component=\"li\" sx={{ mb: 2 }}>\n                          <Box>\n                            <FlightTakeoff\n                              sx={{\n                                display: {\n                                  xs: \"none\",\n                                  sm: \"inline-block\",\n                                },\n                                mr: 2,\n                                verticalAlign: \"middle\",\n                              }}\n                            />\n                            <strong>{flight.departure_time}</strong>\n                            <DotSeperator />\n                            {globalAirports[flight.departure].name}\n                            <strong>\n                              {` `}({flight.departure})\n                            </strong>\n                          </Box>\n                        </Box>\n                        <Box\n                          component=\"li\"\n                          sx={{\n                            mb: 2,\n                            paddingLeft: \"28px\",\n                            marginLeft: \"12px\",\n                            borderLeft: \"1px solid grey\",\n                          }}\n                        >\n                          <Chip label={secondsToTime(flight.duration * 60)} />\n                          <DotSeperator />\n                          <Box\n                            sx={{\n                              verticalAlign: \"middle\",\n                              display: \"inline-block\",\n                            }}\n                          >\n                            <Box\n                              sx={{\n                                verticalAlign: \"middle\",\n                                display: \"inline-block\",\n                              }}\n                            >\n                              <Image\n                                key={__airlineCode}\n                                src={`https://images.kiwi.com/airlines/32/${__airlineCode}.png?default=airline.png`}\n                                alt={\n                                  globalAirlines[__airlineCode].name\n                                }\n                                width={24}\n                                height={24}\n                              />\n                            </Box>\n                          </Box>\n                          <Box component=\"span\" sx={{ ml: 1 }}>\n                            {globalAirlines[__airlineCode].name}\n                          </Box>\n                          <DotSeperator />\n                          <span>\n                            {t(\"search-results-flight-details-class\", {\n                              value: flight.trip_class,\n                            })}\n                          </span>\n                          <DotSeperator />\n                          <span>{flight.aircraft}</span>\n                          <DotSeperator />\n                          <span>\n                            {flight.__airlineCode} {flight.number}\n                          </span>\n                        </Box>\n                        <Box component=\"li\" sx={{ mb: 2 }}>\n                          <Box>\n                            <FlightLandIcon\n                              sx={{\n                                display: {\n                                  xs: \"none\",\n                                  sm: \"inline-block\",\n                                },\n                                mr: 2,\n                                verticalAlign: \"middle\",\n                              }}\n                            />\n                            <strong>{flight.arrival_time}</strong>\n                            <DotSeperator />\n                            {`${globalAirports[flight.arrival].name} `}\n                            <strong>({flight.arrival})</strong>\n                          </Box>\n                        </Box>\n                        {ticket.segment[0].flight[i + 1] &&\n                          ticket.segment[0].flight.length !== i && (\n                            <Box\n                              sx={{\n                                my: 4,\n                              }}\n                            >\n                              <AccessTimeIcon\n                                sx={{ mr: 2, verticalAlign: \"middle\" }}\n                              />\n                              <>\n                                <span>\n                                  <strong>\n                                    {secondsToTime(\n                                      ticket.segment[0].flight[i + 1].delay * 60\n                                    )}\n                                  </strong>{\" \"}\n                                </span>\n                                {t(\"search-results-flight-details-layover\")}\n                                <DotSeperator />\n                                <span>\n                                  {globalAirports[flight.arrival].city}{\" \"}\n                                  <strong>({flight.arrival})</strong>\n                                </span>\n                              </>\n                            </Box>\n                          )}\n                      </Box>\n                    </Box>\n                  );\n                })}\n              </Box>\n            </Paper>\n            {ticket.segment.length > 1 && (\n              <Paper>\n                <Box sx={{ p: 2 }}>\n                  <Typography\n                    sx={{\n                      fontSize: { xs: 14, sm: 16 },\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    <span>{t(\"flights-return\")}</span>\n                    <style global jsx>{`\n                      .dot-seprator:before {\n                        content: \"\\b7\";\n                      }\n                    `}</style>\n                    <DotSeperator />\n                    <span>\n                      {intl.formatDateTime(\n                        toDate(\n                          ticket.segment[ticket.segment.length - 1].flight[0]\n                            .local_departure_timestamp * 1000\n                        ),\n                        {\n                          month: \"short\",\n                          day: \"numeric\",\n                          weekday: \"short\",\n                        }\n                      )}\n                    </span>\n                  </Typography>\n                  <Typography\n                    sx={{ fontSize: { xs: 12, sm: 14 } }}\n                    variant=\"body2\"\n                  >\n                    {secondsToTime(\n                      ticket.segment_durations[ticket.segment.length - 1] * 60\n                    )}\n                    <Box\n                      className=\"dot-seprator\"\n                      sx={{ mx: 1, display: \"inline-block\" }}\n                    ></Box>\n                    {t(\"search-results-flight-details-stops\", {\n                      value:\n                        ticket.segment[ticket.segment.length - 1].flight\n                          .length - 1,\n                      value2: ticket.max_stops,\n                    })}\n                  </Typography>\n                  <Divider sx={{ my: 1 }} />\n                  {ticket.segment[ticket.segment.length - 1].flight.map(\n                    (flight: any, i: number) => {\n                      const __airlineCode = flight.marketing_carrier || flight.operating_carrier || flight.operated_by;\n                      return (\n                        <Box key={i}>\n                          <Box\n                            component=\"ul\"\n                            sx={{ fontSize: 14, listStyle: \"none\", padding: 0 }}\n                          >\n                            <Box component=\"li\" sx={{ mb: 2 }}>\n                              <Box>\n                                <FlightTakeoff\n                                  sx={{\n                                    display: {\n                                      xs: \"none\",\n                                      sm: \"inline-block\",\n                                    },\n                                    verticalAlign: \"middle\",\n                                    mr: 2,\n                                  }}\n                                />\n                                <strong>{flight.departure_time}</strong>\n                                <DotSeperator />\n                                {globalAirports[flight.departure].name}\n                                <strong>\n                                  {` `}({flight.departure})\n                                </strong>\n                              </Box>\n                            </Box>\n                            <Box\n                              component=\"li\"\n                              sx={{\n                                mb: 2,\n                                paddingLeft: \"28px\",\n                                marginLeft: \"12px\",\n                                borderLeft: \"1px solid grey\",\n                              }}\n                            >\n                              <Chip\n                                label={secondsToTime(flight.duration * 60)}\n                              />\n                              <DotSeperator />\n                              <Box\n                                sx={{\n                                  verticalAlign: \"middle\",\n                                  display: \"inline-block\",\n                                }}\n                              >\n                                <Image\n                                  key={__airlineCode}\n                                  src={`https://images.kiwi.com/airlines/32/${__airlineCode}.png?default=airline.png`}\n                                  alt={\n                                    globalAirlines[__airlineCode]\n                                      .name\n                                  }\n                                  width={24}\n                                  height={24}\n                                />\n                              </Box>\n                              <Box component=\"span\" sx={{ ml: 1 }}>\n                                {globalAirlines[__airlineCode].name}\n                              </Box>\n                              <DotSeperator />\n                              <span>\n                                {t(\"search-results-flight-details-class\", {\n                                  value: flight.trip_class,\n                                })}\n                              </span>\n                              <DotSeperator />\n                              <span>{flight.aircraft}</span>\n                              <DotSeperator />\n                              <span>\n                                {__airlineCode} {flight.number}\n                              </span>\n                            </Box>\n                            <Box component=\"li\" sx={{ mb: 2 }}>\n                              <Box>\n                                <FlightLandIcon\n                                  sx={{\n                                    display: {\n                                      xs: \"none\",\n                                      sm: \"inline-block\",\n                                    },\n                                    mr: 2,\n                                    verticalAlign: \"middle\",\n                                  }}\n                                />\n                                <strong>{flight.arrival_time}</strong>\n                                <DotSeperator />\n                                {`${globalAirports[flight.arrival].name} `}\n                                <strong>({flight.arrival})</strong>\n                              </Box>\n                            </Box>\n                          </Box>\n                          {ticket.segment[ticket.segment.length - 1].flight[\n                            i + 1\n                          ] &&\n                            ticket.segment[ticket.segment.length - 1].flight\n                              .length !== i && (\n                              <Box\n                                sx={{\n                                  display: \"flex\",\n                                  alignItems: \"center\",\n                                  my: 4,\n                                }}\n                              >\n                                <AccessTimeIcon sx={{ mr: 2 }} />\n                                <Chip\n                                  label={\n                                    <>\n                                      <span>\n                                        <strong>\n                                          {secondsToTime(\n                                            ticket.segment[\n                                              ticket.segment.length - 1\n                                            ].flight[i + 1].delay * 60\n                                          )}\n                                        </strong>{\" \"}\n                                      </span>\n                                      {t(\n                                        \"search-results-flight-details-layover\"\n                                      )}\n                                      <DotSeperator />\n                                      <span>\n                                        {globalAirports[flight.arrival].city}{\" \"}\n                                        <strong>({flight.arrival})</strong>\n                                      </span>\n                                    </>\n                                  }\n                                />\n                              </Box>\n                            )}\n                        </Box>\n                      );\n                    }\n                  )}\n                </Box>\n              </Paper>\n            )}\n            <Paper>\n              <Box sx={{ p: 2 }}>\n                <Typography\n                  sx={{\n                    fontSize: { xs: 14, sm: 16 },\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {t(\"search-results-flight-details-booking-options\")}\n                </Typography>\n                <Typography\n                  sx={{ fontSize: { xs: 12, sm: 14 } }}\n                  variant=\"body2\"\n                >\n                  {t(\"search-results-flight-details-booking-options-sort\")}\n                </Typography>\n                <Divider sx={{ mt: 1, mb: 2 }} />\n                <Stack direction=\"column\" divider={<Divider />} spacing={1}>\n                  {sortedTerms.map((term, index: number) => {\n                    return (\n                      <Box\n                        key={index}\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"space-between\",\n                          alignItems: \"center\",\n                          // my: 1,\n                        }}\n                      >\n                        <div>\n                          {globalGates && globalGates[term.agent_id]?.label}\n                        </div>\n                        <div>\n                          <Typography sx={{ display: \"inline-block\", mr: 2 }}>\n                            {rates &&\n                              currency &&\n                              intl.formatNumber(\n                                term.unified_price /\n                                rates[currency.code.toLowerCase()],\n                                {\n                                  style: \"currency\",\n                                  currency: currency.code,\n                                  maximumFractionDigits: 0,\n                                  minimumFractionDigits: 0,\n                                }\n                              )}\n                          </Typography>\n                          <Button\n                            variant=\"contained\"\n                            sx={{}}\n                            onClick={(e) => {\n                              handleBuy(e, term, searchId);\n                            }}\n                          >\n                            <Typography>\n                              {t(\"search-results-book-select\")}\n                            </Typography>\n                          </Button>\n                        </div>\n                      </Box>\n                    );\n                  })}\n                </Stack>\n              </Box>\n            </Paper>\n          </Stack>\n        </Box>\n      )}\n    </Paper>\n  );\n};\n\nexport const FlightTickets = ({\n  proposals,\n  limit = 10,\n  globalAirlines,\n  globalAirports,\n  globalGates,\n  rates,\n  searchId,\n  gclid,\n  subId\n}: any) => {\n  const [isOpenUpsell, setIsOpenUpsell] = useState(false);\n\n  const _controller = useRef(\n    typeof window !== \"undefined\" && new AbortController()\n  );\n\n  const _signal = useRef(_controller.current && _controller.current.signal);\n\n  useEffect(() => {\n    return () => {\n      _controller.current && _controller.current.abort();\n    }\n  }, []);\n\n  const handleOnBuyEvent = useCallback((ticket, term) => {\n    setIsOpenUpsell(true)\n\n    // API call to post this click to database\n    fetchWithRetry(fetch)('/api/click', {\n      body: JSON.stringify({\n        subId,\n        gclid,\n        ticket: {\n          ...ticket,\n          _selected_agent: term.agent_id,\n        }\n      }),\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      signal: _signal.current || null,\n      ...retryConfig,\n    })\n      .catch((error) => {\n        if (error?.name !== \"AbortError\") {\n          captureException(error);\n        }\n      })\n\n  }, []);\n\n  const handleClose = useCallback(() => setIsOpenUpsell(false), []);\n\n  return (\n    <Stack spacing={2}>\n      {proposals?.slice(0, limit).map((ticket: any, index: number) => {\n        return (\n          <FlightTicket\n            key={index}\n            ticket={ticket}\n            globalAirlines={globalAirlines}\n            globalAirports={globalAirports}\n            globalGates={globalGates}\n            rates={rates}\n            searchId={searchId}\n            handleOnBuy={handleOnBuyEvent}\n          />\n        );\n      })}\n      <LazyBookUpsell isOpen={isOpenUpsell} handleClose={handleClose} />\n    </Stack>\n  );\n};\n","import type { NextPage, GetStaticPropsContext } from \"next\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport { useRouter } from \"next/router\";\nimport { useTranslations, useIntl } from \"next-intl\";\nimport fetchWithRetry from \"fetch-retry\";\nimport { captureException } from \"@sentry/nextjs\";\n\nimport ResponsiveAppBar from \"../src/components/ResponsiveAppBar\";\nimport React, {\n  useCallback,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport SearchForm, { ETripClass } from \"../src/components/SearchForm\";\nimport Paper from \"@mui/material/Paper\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport Typography from \"@mui/material/Typography\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Button from \"@mui/material/Button\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio from \"@mui/material/Radio\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Head from \"next/head\";\nimport {\n  EFlightSort,\n  filterFlights,\n  generateSignature,\n  IFlightsFilters,\n  ISortedFlights,\n  retryConfig,\n  secondsToTime,\n  sortFlights,\n  sortFlightTerms,\n  trackEvent,\n} from \"../src/utils\";\nimport { useGlobal } from \"../src/context\";\nimport Skeleton from \"@mui/material/Skeleton\";\nimport Stack from \"@mui/material/Stack\";\nimport { FlightTickets } from \"../src/components/FlightTickets\";\nimport { useTheme } from \"../src/theme\";\nimport Slider from \"@mui/material/Slider\";\nimport Drawer from \"@mui/material/Drawer\";\nimport { Footer } from \"../src/components/Footer\";\nconst merge = require(\"lodash.merge\");\nconst maxBy = require(\"lodash.maxby\");\nconst minBy = require(\"lodash.minby\");\n\nexport const toArrayWithKey = (obj: any, keyAs: any) => {\n  const result = [];\n  for (const key in obj) {\n    result.push({\n      [keyAs]: key,\n      ...obj[key],\n    });\n  }\n  return result;\n};\n\nexport enum EStopsFilterType {\n  ANY,\n  NON_STOP,\n  ONE_STOP,\n  TWO_STOP,\n}\n\nconst fetchSearchResults = (searchId: string, signal?: any) => {\n  return fetchWithRetry(fetch)(\n    `https://apiv2.flightscanner.com/flights-search-results?uuid=${searchId}`,\n    {\n      signal,\n      ...retryConfig,\n    }\n  )\n    .then((r) => r.json())\n    .catch((error) => {\n      if (error?.name !== \"AbortError\") {\n        captureException(error);\n      }\n    });\n};\n\nconst API_URL = \"https://tequila-api.kiwi.com\";\nconst API_KEY = \"qdPPeM7rVEsWDhJ2kCIbnZmPs1jAGxxr\";\n\nconst fetchSearchResultsDuffel = (query: any, signal: any) => {\n  const passengers = [] as any;\n\n  passengers.push(\n    ...Array.from({ length: Number(query.adults || 1) }, (_, i) => ({\n      type: \"adult\",\n    }))\n  );\n\n  passengers.push(\n    ...Array.from({ length: Number(query.children || 0) }, (_, i) => ({\n      age: 2,\n    }))\n  );\n\n  passengers.push(\n    ...Array.from({ length: Number(query.infants || 0) }, (_, i) => ({\n      age: 2,\n    }))\n  );\n\n  const slices = [\n    {\n      origin: query.from?.split(\":\")[0],\n      destination: query.to?.split(\":\")[0],\n      departure_date: new Date(query.departureDate).toISOString().split(\"T\")[0],\n    },\n  ];\n\n  if (query.returnDate && query.returnDate !== \"none\") {\n    slices.push({\n      origin: query.to?.split(\":\")[0],\n      destination: query.from?.split(\":\")[0],\n      departure_date: new Date(query.returnDate).toISOString().split(\"T\")[0],\n    });\n  }\n\n  return fetchWithRetry(fetch)(\"/api/search\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      slices,\n      passengers,\n    }),\n    signal,\n  }).then((r) => r.json()).catch((error) => {\n    if (error?.name !== \"AbortError\") {\n      captureException(error);\n    }\n  });\n};\n\nconst fetchSearchResultsKiwi = (query: any, currency: string, signal: any) => {\n  const params = {\n    fly_from: query.from?.split(\":\")[0],\n    fly_to: query.to?.split(\":\")[0],\n    date_from: new Date(query.departureDate).toISOString().split(\"T\")[0],\n    date_to: new Date(query.departureDate).toISOString().split(\"T\")[0],\n    adults: Number(query.adults || 1),\n    children: Number(query.children || 0),\n    infants: Number(query.infants || 0),\n    vehicle_type: \"aircraft\",\n    curr: currency,\n  } as any;\n\n  if (query.tripClass === ETripClass.business) {\n    params.selected_cabins = \"C\";\n    params.mix_with_cabins = \"W\";\n  }\n\n  if (query.returnDate && query.returnDate !== \"none\") {\n    params.return_from = new Date(query.returnDate).toISOString().split(\"T\")[0];\n    params.return_to = new Date(query.returnDate).toISOString().split(\"T\")[0];\n  }\n  return fetchWithRetry(fetch)(\n    `${API_URL}/v2/search?` +\n    Object.keys(params)\n      .map((k) => k + \"=\" + params[k])\n      .join(\"&\"),\n    {\n      headers: {\n        apiKey: API_KEY,\n      },\n      signal,\n      ...retryConfig,\n    }\n  )\n    .then((r) => r.json())\n    .catch((error) => {\n      if (error?.name !== \"AbortError\") {\n        captureException(error);\n      }\n    });\n};\n\nconst marker = \"56123\";\n\nconst pollEverySeconds = 3000;\n\nexport const firestoreAutoId = (): string => {\n  const CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n\n  let autoId = ''\n\n  for (let i = 0; i < 20; i++) {\n    autoId += CHARS.charAt(\n      Math.floor(Math.random() * CHARS.length)\n    )\n  }\n  return autoId\n}\n\nconst flightSearch = (\n  flightSearchRequest: any,\n  locale: string,\n  currencyCode: string,\n  gclid?: string\n) => {\n  const subId = firestoreAutoId();\n  const flightSearchRequestWithData = {\n    marker: `${marker}.${subId}`,\n    host: \"www.flightscanner.com\",\n    user_ip: \"127.0.0.1\", // TODO do we have user ip on front-end? OR we need to modify end-point to generate signature for us.\n    locale,\n    trip_class: flightSearchRequest.trip_class,\n    passengers: flightSearchRequest.passengers,\n    segments: flightSearchRequest.segments,\n  } as any;\n\n  if (currencyCode) {\n    flightSearchRequestWithData.currency = currencyCode;\n  }\n\n  const signature = generateSignature(\n    JSON.parse(JSON.stringify(flightSearchRequestWithData)),\n    \"ff9339822cba2aeabedc70c12c502728\"\n  );\n\n  const body = {\n    ...flightSearchRequestWithData,\n    signature,\n  };\n\n  return {\n    url: \"https://apiv2.flightscanner.com/flights-search\",\n    body,\n    subId,\n    gclid\n  };\n};\n\nconst generateFlightUniqueId = (\n  airportFrom: string,\n  airportTo: string,\n  operating_carrier: string,\n  flightNumber: string\n) => {\n  return `${airportFrom.toUpperCase()}_${airportTo.toUpperCase()}_${operating_carrier}_${flightNumber}`;\n};\n\nconst generateTicketId = (flightUniqueIds: string[]) => {\n  return flightUniqueIds.join(\"|\");\n};\n\nconst setFlightSortInfo = (sortedFlights: ISortedFlights) => {\n  const bestFlight = sortedFlights[EFlightSort.BEST][0];\n  const cheapFlight = sortedFlights[EFlightSort.CHEAP][0];\n  const quickFlight = sortedFlights[EFlightSort.QUICK][0];\n\n  return {\n    best: {\n      amount:\n        (bestFlight && sortFlightTerms(bestFlight.terms)[0].unified_price) || 0,\n      duration: (bestFlight && bestFlight.total_duration) || 0,\n    },\n    cheap: {\n      amount:\n        (cheapFlight && sortFlightTerms(cheapFlight.terms)[0].unified_price) ||\n        0,\n      duration: (cheapFlight && cheapFlight.total_duration) || 0,\n    },\n    quick: {\n      amount:\n        (quickFlight && sortFlightTerms(quickFlight.terms)[0].unified_price) ||\n        0,\n      duration: (quickFlight && quickFlight.total_duration) || 0,\n    },\n  };\n};\n\nconst initialFiltersBnd = {\n  price: [0, 0],\n  duration: [0, 0],\n  times: [\n    [[], []],\n    [[], []],\n  ],\n  airlines: [],\n  gates: [],\n};\n\ntype initialStateType = {\n  airports: any[];\n  airlines: any[];\n  gates: any[];\n  searchId: string | undefined;\n  searchComplete: boolean;\n  limit: number;\n  rates: any;\n  filteredFlightsCount: number;\n  sortedFlightsInfo: any;\n  filtersBoundaries: any;\n  flightSortBy: EFlightSort.BEST;\n  flightsFilters: IFlightsFilters;\n  proposals: any[];\n  allProposalsLength: number;\n  gclid: string | undefined;\n  subId: string | undefined;\n};\n\nconst initialState: initialStateType = {\n  airports: [],\n  airlines: [],\n  gates: [],\n  searchId: undefined,\n  searchComplete: false,\n  limit: 10,\n  rates: undefined,\n  filteredFlightsCount: 0,\n  sortedFlightsInfo: undefined,\n  filtersBoundaries: { ...initialFiltersBnd },\n  flightSortBy: EFlightSort.BEST,\n  flightsFilters: {\n    stop: EStopsFilterType.ANY,\n    duration: [0, 0],\n    price: [0, 0],\n    times: [],\n    airlines: [],\n    gates: [],\n  },\n  proposals: [],\n  allProposalsLength: 0,\n  subId: undefined,\n  gclid: undefined,\n};\n\nfunction reducer(state: initialStateType, action: any) {\n  switch (action.type) {\n    case \"setVisibleProposals\":\n      return {\n        ...state,\n        proposals: action.proposals,\n        filteredFlightsCount: action.filteredFlights.length,\n        sortedFlightsInfo: action.sortedFlightsInfo,\n        airports: action.airports\n          ? { ...merge(state.airports, action.airports) }\n          : state.airports,\n        gates: action.gates\n          ? { ...merge(state.gates, action.gates) }\n          : state.gates,\n        airlines: action.airlines\n          ? { ...merge(state.airlines, action.airlines) }\n          : state.airlines,\n        flightSortBy: action.sortBy,\n        flightsFilters: action.flightsFilters\n          ? action.flightsFilters\n          : state.flightsFilters,\n        allProposalsLength: action.allProposalsLength,\n      };\n    case \"setSearchId\":\n      return {\n        ...state,\n        searchId: action.searchId,\n        rates: action.rates,\n        subId: action.subId,\n        gclid: action.gclid,\n      };\n\n    case \"searchComplete\":\n      return {\n        ...state,\n        searchComplete: true,\n      };\n    case \"resetSearch\":\n      return {\n        ...state,\n        ...initialState,\n      };\n    case \"loadMore\":\n      return {\n        ...state,\n        limit: state.limit + 10,\n      };\n    case \"setFiltersBoundaries\":\n      return {\n        ...state,\n        filtersBoundaries: action.filtersBoundaries,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst DurationSlider = ({ state, onDurationChange = () => { } }: any) => {\n  const [_durationV, setDurationV] = useState([]);\n\n  useEffect(() => {\n    if (\n      _durationV &&\n      state.flightsFilters.duration[0] === 0 &&\n      state.flightsFilters.duration[1] === 0\n    ) {\n      setDurationV([]);\n    }\n  }, [state.flightsFilters.duration]);\n\n  return (\n    <Slider\n      getAriaLabel={() => \"Duration range\"}\n      min={state.filtersBoundaries.duration[0]}\n      max={state.filtersBoundaries.duration[1]}\n      valueLabelFormat={(v) => secondsToTime(v * 60)}\n      marks={[\n        {\n          value: state.filtersBoundaries.duration[0],\n          label: secondsToTime(state.filtersBoundaries.duration[0] * 60),\n        },\n        {\n          value: state.filtersBoundaries.duration[1],\n          label: secondsToTime(state.filtersBoundaries.duration[1] * 60),\n        },\n      ]}\n      value={[\n        _durationV[0] || state.flightsFilters.duration[0],\n        _durationV[1] ||\n        state.flightsFilters.duration[0] ||\n        state.filtersBoundaries.duration[1],\n      ]}\n      onChange={(v: any) => {\n        setDurationV(v.target.value);\n      }}\n      onChangeCommitted={(v) => {\n        onDurationChange(_durationV);\n      }}\n      valueLabelDisplay=\"auto\"\n      getAriaValueText={(v) => {\n        return `${v}c`;\n      }}\n    />\n  );\n};\n\nconst PriceSlider = ({ state, onPriceChange = () => { }, currency }: any) => {\n  const intl = useIntl();\n  const [_priceV, setPriceV] = useState([]);\n\n  useEffect(() => {\n    if (\n      _priceV &&\n      state.flightsFilters.price[0] === 0 &&\n      state.flightsFilters.price[1] === 0\n    ) {\n      setPriceV([]);\n    }\n  }, [state.flightsFilters.price]);\n\n  const formartPrice = (price: number) => {\n    return intl.formatNumber(price / state.rates[currency.code.toLowerCase()], {\n      style: \"currency\",\n      currency: currency.code,\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    });\n  };\n\n  if (!currency || !state?.rates) {\n    return null;\n  }\n\n  return (\n    <Slider\n      getAriaLabel={() => \"Price range\"}\n      min={state.filtersBoundaries.price[0]}\n      max={state.filtersBoundaries.price[1]}\n      valueLabelFormat={(v) => formartPrice(v)}\n      marks={[\n        {\n          value: state.filtersBoundaries.price[0],\n          label: formartPrice(state.filtersBoundaries.price[0]),\n        },\n        {\n          value: state.filtersBoundaries.price[1],\n          label: formartPrice(state.filtersBoundaries.price[1]),\n        },\n      ]}\n      value={[\n        _priceV[0] || state.flightsFilters.price[0],\n        _priceV[1] ||\n        state.flightsFilters.price[0] ||\n        state.filtersBoundaries.price[1],\n      ]}\n      onChange={(v: any) => {\n        setPriceV(v.target.value);\n      }}\n      onChangeCommitted={(v) => {\n        onPriceChange(_priceV);\n      }}\n      valueLabelDisplay=\"auto\"\n      getAriaValueText={(v) => {\n        return `${v}c`;\n      }}\n    />\n  );\n};\n\nconst MobileFilters = ({\n  state,\n  _allProposals,\n  handleFilter,\n  resetFilters,\n  currency,\n}: any) => {\n  const t = useTranslations();\n  const [isOpen, setIsOpen] = useState(false);\n\n  if (state.allProposalsLength === 0) {\n    return (\n      <Box sx={{ mb: 2 }}>\n        <Skeleton variant=\"rectangular\" width={\"100%\"} height={56} />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: { xs: \"flex\", md: \"none\" },\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          pb: 2,\n        }}\n      >\n        <Typography>\n          {t(\"filters-flights-count\", {\n            value: state.filteredFlightsCount,\n            value2: _allProposals.current.length,\n          })}\n        </Typography>\n        <Button\n          variant=\"contained\"\n          disableElevation\n          size=\"small\"\n          onClick={() => {\n            setIsOpen(true);\n            trackEvent({\n              action: \"MobileFiltersToggle\",\n              label: \"open\",\n            });\n          }}\n        >\n          {t(\"filters\")}\n        </Button>\n      </Box>\n\n      <Drawer\n        anchor=\"bottom\"\n        open={isOpen}\n        onClose={() => {\n          setIsOpen(false);\n          trackEvent({\n            action: \"MobileFiltersToggle\",\n            label: \"close\",\n          });\n        }}\n      >\n        <Box sx={{ p: 1 }}>\n          <Filters\n            state={state}\n            handleFilter={handleFilter}\n            currency={currency}\n            resetFilters={resetFilters}\n            defaultExpanded={false}\n          />\n          <Button\n            variant=\"contained\"\n            disableElevation\n            sx={{ mt: 1, width: \"100%\" }}\n            onClick={() => {\n              setIsOpen(false);\n            }}\n          >\n            {t(\"misc-apply\")}\n          </Button>\n        </Box>\n      </Drawer>\n    </>\n  );\n};\n\nconst Filters = ({\n  state,\n  handleFilter,\n  currency,\n  resetFilters,\n  defaultExpanded = true,\n}: any) => {\n  const t = useTranslations();\n\n  return (\n    <>\n      <Accordion defaultExpanded={defaultExpanded} elevation={2}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls={t(\"filters-stops\")}\n        >\n          <Typography>{t(\"filters-stops\")}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <RadioGroup\n            aria-labelledby=\"\"\n            defaultValue={EStopsFilterType.ANY}\n            name=\"\"\n            value={state.flightsFilters.stop}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              handleFilter(\"stop\", (event.target as HTMLInputElement).value)\n            }\n          >\n            <FormControlLabel\n              value={EStopsFilterType.ANY}\n              control={<Radio />}\n              label={t(\"filters-stops-any\")}\n            />\n            <FormControlLabel\n              value={EStopsFilterType.NON_STOP}\n              control={<Radio />}\n              label={t(\"filters-stops-non-stop\")}\n            />\n            <FormControlLabel\n              value={EStopsFilterType.ONE_STOP}\n              control={<Radio />}\n              label={t(\"filters-stops-one-stop\")}\n            />\n            <FormControlLabel\n              value={EStopsFilterType.TWO_STOP}\n              control={<Radio />}\n              label={t(\"filters-stops-two-stop\")}\n            />\n          </RadioGroup>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion defaultExpanded={defaultExpanded}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls={t(\"filters-duration\")}\n        >\n          <Typography>{t(\"filters-duration\")}</Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ px: 5 }}>\n          <DurationSlider\n            state={state}\n            onDurationChange={(v: any) => {\n              handleFilter(\"duration\", v);\n            }}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion defaultExpanded={defaultExpanded}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls={t(\"filters-price\")}\n        >\n          <Typography>{t(\"filters-price\")}</Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ px: 5 }}>\n          <PriceSlider\n            state={state}\n            currency={currency}\n            onPriceChange={(v: any) => {\n              handleFilter(\"price\", v);\n            }}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Button\n        variant=\"contained\"\n        disableElevation\n        sx={{ mt: 2, width: \"100%\" }}\n        onClick={resetFilters}\n      >\n        {t(\"search-results-reset-filter-btn\")}\n      </Button>\n    </>\n  );\n};\n\nconst Home: NextPage = () => {\n  const intl = useIntl();\n  const t = useTranslations();\n  const theme = useTheme();\n  const { query, locale }: any = useRouter();\n  const { currency } = useGlobal();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const canResetRef = useRef<boolean>();\n  const cachedKiwiResponse = useRef();\n  const cachedDuffelResponse = useRef();\n  const _searchRequestPollTimeout = useRef<NodeJS.Timeout>();\n  const searchResults = useRef<any>([]);\n  const _proposalIndexMap = useRef<any>({});\n  const _allProposals = useRef<any>([]);\n  const _filtersBoundaries = useRef<any>([]);\n  const _controller = useRef(\n    typeof window !== \"undefined\" && new AbortController()\n  );\n  const _controllerKiwi = useRef(\n    typeof window !== \"undefined\" && new AbortController()\n  );\n  const _controllerDuffel = useRef(\n    typeof window !== \"undefined\" && new AbortController()\n  );\n  const _signal = useRef(_controller.current && _controller.current.signal);\n  const _signalKiwi = useRef(\n    _controllerKiwi.current && _controllerKiwi.current.signal\n  );\n  const _signalDuffel = useRef(\n    _controllerDuffel.current && _controllerDuffel.current.signal\n  );\n\n  // Used to avoid waiting for state to update state will pesist to final correct state but while we have async request we need this\n  const sortByRef = useRef<EFlightSort>(initialState.flightSortBy);\n  const flightsFiltersRef = useRef({ ...initialState.flightsFilters });\n\n  const fetchKiwiFlights = (query: any, currencyCode: string) => {\n    fetchSearchResultsKiwi(query, currencyCode, _signalKiwi.current).then(\n      (res: any) => {\n        cachedKiwiResponse.current = res;\n      }\n    ).catch((error) => {\n      if (error?.name !== \"AbortError\") {\n        captureException(error);\n      }\n    });\n  };\n\n  const fetchDuffelFlights = async (query: any) => {\n    fetchSearchResultsDuffel(query, _signalDuffel.current).then((res: any) => {\n      cachedDuffelResponse.current = res;\n    }).catch((error) => {\n      if (error?.name !== \"AbortError\") {\n        captureException(error);\n      }\n    });\n  };\n\n  const onSortingChange = (sortBy: EFlightSort) => {\n    sortByRef.current = sortBy;\n    setVisibleProposals({\n      sortBy,\n    });\n    trackEvent({\n      action: \"onSortingChange\",\n      label: String(sortBy),\n    });\n  };\n\n  const setVisibleProposals = useCallback(\n    ({ gates = {}, airlines = {}, airports = {} }: any = {}) => {\n      // Can change this during flights in progress so it work any time\n      const sortBy = sortByRef.current;\n      const flightsFilters = flightsFiltersRef.current;\n\n      // Filters\n      const filteredFlights = filterFlights(\n        _allProposals.current,\n        flightsFilters\n      );\n\n      // Sorting\n      const sortedFlights = sortFlights(filteredFlights);\n      const sortedFlightsInfo = setFlightSortInfo(sortedFlights);\n\n      // Set + Pagination\n      const proposals = sortedFlights[sortBy];\n\n      dispatch({\n        type: \"setVisibleProposals\",\n        proposals,\n        filteredFlights,\n        sortedFlightsInfo,\n        gates, // will be added to global state\n        airlines, // ^\n        airports, // ^\n        sortBy,\n        flightsFilters,\n        allProposalsLength: _allProposals.current.length,\n      });\n    },\n    []\n  );\n\n  const onDuffelFlightsResponse = (res: any) => {\n    const gates_info = {\n      1337: {\n        currency_code: \"usd\",\n        is_airline: false,\n        label: \"Flightscanner\",\n      },\n    };\n\n    res.data.offers.forEach((ticket: any) => {\n      const flightScannerIdCombined: any[] = [];\n\n      const currRate = state.rates[ticket.total_currency.toLowerCase()];\n      const priceInRubles =\n        currRate > 1\n          ? ticket.total_amount * currRate\n          : ticket.currRate / currRate;\n\n      const terms = {\n        1337: {\n          currency: \"rub\", //currency.code,\n          agent_id: 1337,\n          // price: ticket.base_amount,\n          price: priceInRubles,\n          unified_price: priceInRubles,\n          // unified_price:\n          //   (state.rates &&\n          //     priceInRubles * state.rates[currency.code.toLowerCase()]) ||\n          //   0,\n          url: ticket.id,\n        },\n      };\n\n      ticket.slices.forEach((slice: any) => {\n        slice.segments.forEach((segment: any) => {\n          const airlineCode =\n            segment.marketing_carrier.iata_code ||\n            segment.operating_carrier.iata_code;\n          const uniqueId = generateFlightUniqueId(\n            segment.origin.iata_code,\n            segment.destination.iata_code,\n            airlineCode,\n            segment.marketing_carrier_flight_number\n          );\n          flightScannerIdCombined.push(uniqueId);\n        });\n      });\n\n      const finalFlightScannerId = generateTicketId(\n        flightScannerIdCombined\n      ) as any;\n\n      const index = _proposalIndexMap.current[finalFlightScannerId];\n      _allProposals.current[index] = {\n        ...merge(_allProposals.current[index], { terms: terms }),\n      };\n    });\n\n    setVisibleProposals({\n      gates: gates_info,\n    });\n  };\n\n  const onKiwiFlightsResponse = useCallback(\n    (response: any) => {\n      if (response?.data) {\n        const gates_info = {\n          203: {\n            average_rate: 5,\n            currency_code: \"usd\",\n            email: \"support.ru@kiwi.com\",\n            helplink: \"https://www.kiwi.com/ru/helpcenter\",\n            is_airline: false,\n            is_exclusive: \"true\",\n            label: \"Kiwi.com\",\n            mobile_version: \"true\",\n            payment_methods: [\"card\"],\n            phone: [\"+7 (499) 348 80 53\"],\n            productivity: 0,\n            rates: 2967,\n            show_feedback_popup: true,\n            site: \"https://www.kiwi.com/ru/\",\n            working_hours: \"Круглосуточно\",\n            is_kiwi: true,\n          },\n        };\n\n        response.data.forEach((ticket: any) => {\n          const flightScannerIdCombined: any[] = [];\n          const deepLink = ticket.deep_link;\n\n          const terms = {\n            203: {\n              currency: \"rub\",\n              // flights_baggage: any;\n              // flights_handbags: any;\n              agent_id: 203,\n              price: ticket.price,\n              unified_price: ticket.price,\n              url: deepLink,\n            },\n          };\n\n          ticket.route.forEach((r: any) => {\n            const airlineCode = r.airline.length\n              ? r.airline\n              : r.operating_carrier;\n            const uniqueId = generateFlightUniqueId(\n              r.flyFrom,\n              r.flyTo,\n              airlineCode,\n              r.flight_no\n            );\n            flightScannerIdCombined.push(uniqueId);\n          });\n\n          const finalFlightScannerId = generateTicketId(\n            flightScannerIdCombined\n          ) as any;\n          const index = _proposalIndexMap.current[finalFlightScannerId];\n          _allProposals.current[index] = {\n            ...merge(_allProposals.current[index], { terms: terms }),\n          };\n        });\n\n        setVisibleProposals({\n          gates: gates_info,\n        });\n      }\n    },\n    [setVisibleProposals, currency.code, state.rates]\n  );\n\n  const onFlightsResultsProgress = useCallback(\n    (items: any) => {\n      Array.prototype.push.apply(searchResults.current, items);\n\n      // Update total results count\n      // this.resultsLength = this.searchResults.length;\n\n      // TEMP save new gates/airports/airlines\n      let airports = {};\n      let airlines = {};\n      let gates = {};\n\n      // Merge results\n      searchResults.current.forEach((gate: any) => {\n        airports = { ...merge(airports, gate.airports) };\n        // this.airlines = { ...merge(this.airlines, gate.airlines) };\n        airlines = { ...merge(airlines, gate.airlines) };\n        // JSON.parse(JSON.stringify())\n        // TODO dont overwrite kiwi if already exists\n        // this.gates = { ...merge(this.gates, gate.gates_info) };\n        gates = { ...merge(gates, gate.gates_info) };\n\n        if (gate.filters_boundary) {\n          _filtersBoundaries.current.push(gate.filters_boundary);\n          setFiltersBoundaries();\n        }\n        // Save and update existing proposals\n        // PROPOSAL = FULL TICKET WITH ROUTES\n        gate.proposals.forEach((proposal: any) => {\n          // generate our own unique id\n          // if doesnt exists lets push it as a new ticket\n          // TODO change to object instead\n          proposal.flightScannerId = [];\n          // SEGMENT =    E WAY or RETURN\n          proposal.segment.map((segment: any) => {\n            // Each segment has one or more flights\n            // Assign unique flight id of flightscanner\n            // and to the whole ticket combine all of them\n            return segment.flight.map((segmentFlight: any) => {\n              const uniqueId = generateFlightUniqueId(\n                segmentFlight.departure,\n                segmentFlight.arrival,\n                segmentFlight.marketing_carrier ||\n                segmentFlight.operating_carrier,\n                segmentFlight.number\n              );\n              segmentFlight.flightScannerId = uniqueId;\n              proposal.flightScannerId.push(uniqueId);\n              return segmentFlight;\n            });\n          });\n\n          proposal.flightScannerId = generateTicketId(proposal.flightScannerId);\n\n          // FlightNetwork, SmartFares, Gotogate, SuperSaverunified_price\n          // const blackList = [\"112\", \"132\", \"362\", \"108\"];\n\n          // const hasWhiteTerms = Object.keys(proposal.terms).length > 0;\n\n          if (!_proposalIndexMap.current[proposal.flightScannerId]) {\n            // if (hasWhiteTerms) {\n            const index = _allProposals.current.push({\n              ...proposal,\n              // terms: termsWithoutBackList,\n              terms: proposal.terms, // if only seller of the ticket show it\n            });\n            _proposalIndexMap.current[proposal.flightScannerId] = index - 1;\n            // }\n          } else {\n            const index = _proposalIndexMap.current[proposal.flightScannerId];\n\n            const blackList = [\"112\", \"132\", \"362\", \"108\"];\n            const termsWithoutBackList = { ...proposal.terms };\n\n            blackList.forEach((black) => {\n              delete termsWithoutBackList[black];\n            });\n\n            if (Object.keys(termsWithoutBackList).length > 0) {\n              // filter previous ticket maybe we have blacklist there\n              const termsFilttered = {\n                ..._allProposals.current[index].terms,\n              };\n\n              blackList.forEach((black) => {\n                delete termsFilttered[black];\n              });\n\n              _allProposals.current[index].terms = { ...termsFilttered };\n\n              _allProposals.current[index] = {\n                ...merge(_allProposals.current[index], {\n                  terms: termsWithoutBackList,\n                }),\n              };\n            }\n          }\n        });\n      });\n\n      // TODO this step is where we set visible filters & apply current filters to?\n      // TODO What happens when a filter is changed during search? and after completed...\n      setVisibleProposals({\n        gates,\n        airlines,\n        airports,\n      });\n    },\n    [setVisibleProposals]\n  );\n\n  const cancelPreviousApiCalls = () => {\n    _searchRequestPollTimeout.current &&\n      clearTimeout(_searchRequestPollTimeout.current);\n  };\n\n  const onFlightsResultsComplete = useCallback(() => {\n    if (cachedKiwiResponse.current) {\n      onKiwiFlightsResponse(cachedKiwiResponse.current);\n    }\n    if (cachedDuffelResponse.current) {\n      onDuffelFlightsResponse(cachedDuffelResponse.current);\n    }\n    dispatch({ type: \"searchComplete\" });\n  }, [onKiwiFlightsResponse]);\n\n  const processFlightsSearchResponse = useCallback(\n    (response: any, searchId: string) => {\n      if (response?.length) {\n        const lastItem = response && response[response.length - 1];\n        const isFinalArray = Object.keys(lastItem).length === 1;\n        onFlightsResultsProgress(\n          isFinalArray ? response.slice(0, response.length - 1) : response\n        );\n\n        if (isFinalArray) {\n          onFlightsResultsComplete();\n        } else {\n          _searchRequestPollTimeout.current = setTimeout(() => {\n            cancelPreviousApiCalls();\n            fetchSearchResults(searchId, _signal.current).then((response) => {\n              processFlightsSearchResponse(response, searchId);\n            }).catch((error) => {\n              if (error?.name !== \"AbortError\") {\n                captureException(error);\n              }\n            });\n          }, pollEverySeconds);\n        }\n      }\n    },\n    [onFlightsResultsComplete, onFlightsResultsProgress]\n  );\n\n  const resetSearchState = () => {\n    dispatch({ type: \"resetSearch\" });\n    _allProposals.current = [];\n    _proposalIndexMap.current = {};\n    searchResults.current = [];\n    _filtersBoundaries.current = [];\n    cachedKiwiResponse.current = undefined;\n    canResetRef.current = false;\n    cancelPreviousApiCalls();\n  };\n\n  const handleLoadMore = () => {\n    dispatch({ type: \"loadMore\" });\n    trackEvent({\n      action: \"handleLoadMore\",\n    });\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    if (query?.tripClass === ETripClass.first) {\n      fetchDuffelFlights(query);\n    } else {\n      if (query?.from && !state.searchId && !canResetRef.current) {\n        // we have no searchId and no reset start fetching\n        const flightSearchRequest = {\n          trip_class: query.tripClass || ETripClass.economy,\n          passengers: {\n            adults: Number(query.adults || 1),\n            children: Number(query.children || 0),\n            infants: Number(query.infants || 0),\n          },\n          segments: [\n            {\n              origin: query.from?.split(\":\")[0],\n              destination: query.to?.split(\":\")[0],\n              date: new Date(query.departureDate).toISOString().split(\"T\")[0],\n            },\n          ],\n        } as any;\n\n        if (query.returnDate && query.returnDate !== \"none\") {\n          flightSearchRequest.segments.push({\n            origin: query.to?.split(\":\")[0],\n            destination: query.from?.split(\":\")[0],\n            date: new Date(query.returnDate).toISOString().split(\"T\")[0],\n          });\n        }\n\n        const { url, body, subId, gclid } = flightSearch(\n          flightSearchRequest,\n          locale,\n          currency.code,\n          query.gclid\n        );\n\n        fetchWithRetry(fetch)(url, {\n          body: JSON.stringify(body),\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          signal,\n          ...retryConfig,\n        })\n          .then((r) => r.json())\n          .then((r) => {\n            dispatch({\n              type: \"setSearchId\",\n              searchId: r.search_id,\n              rates: r.currency_rates,\n              subId,\n              gclid,\n            });\n          })\n          .catch((error) => {\n            if (error?.name !== \"AbortError\") {\n              captureException(error);\n            }\n          });\n\n        fetchKiwiFlights(query, \"rub\");\n\n        // fetchDuffelFlights(query);\n\n        return () => {\n          controller?.abort();\n        };\n      } else if (query?.from && state.searchId && !canResetRef.current) {\n        // we got the search id next change of search id we need to reset the searchId\n        canResetRef.current = true; // first call is always not the one to reset\n      } else if (query?.from && state.searchId && canResetRef.current) {\n        // we got locale, query, currency change so reset state (searchId will change and we will fetch new searchId)\n        controller?.abort();\n        resetSearchState();\n      }\n    }\n  }, [query, locale, currency, state.searchId]);\n\n  useEffect(() => {\n    if (state.searchId) {\n      // TODO after reset state is done only start fetching calls\n      // resetSearchState();\n      fetchSearchResults(state.searchId, _signal.current).then((response) => {\n        processFlightsSearchResponse(response, state.searchId);\n      }).catch((error) => {\n        if (error?.name !== \"AbortError\") {\n          captureException(error);\n        }\n      });\n\n      () => {\n        cancelPreviousApiCalls();\n      };\n    }\n  }, [state.searchId, processFlightsSearchResponse]);\n\n  const handleFilter = (filterName: string, filterValue: string) => {\n    flightsFiltersRef.current = {\n      ...state.flightsFilters,\n      [filterName]: filterValue,\n    };\n    setVisibleProposals();\n    trackEvent({\n      action: \"handleFilter\",\n      category: filterName,\n      label: String(filterValue),\n    });\n  };\n\n  const setFiltersBoundaries = () => {\n    const maxPrice = Math.ceil(\n      maxBy(_filtersBoundaries.current, (o: any) => o.price.max).price.max * 1.1\n    );\n    const minPrice = Math.floor(\n      minBy(_filtersBoundaries.current, (o: any) => o.price.min).price.min\n    );\n    const maxDuration = Math.ceil(\n      maxBy(_filtersBoundaries.current, (o: any) => o.flights_duration.max)\n        .flights_duration.max * 1.1\n    );\n    const minDuration = Math.floor(\n      minBy(_filtersBoundaries.current, (o: any) => o.flights_duration.min)\n        .flights_duration.min\n    );\n    const airlines = toArrayWithKey(state.airlines, \"_code\");\n    const gates = toArrayWithKey(state.gates, \"_code\");\n\n    dispatch({\n      type: \"setFiltersBoundaries\",\n      filtersBoundaries: {\n        ...state.filtersBoundaries,\n        price: [minPrice, maxPrice],\n        duration: [minDuration, maxDuration],\n        times: [],\n        airlines,\n        gates,\n      },\n    });\n  };\n\n  const resetFilters = () => {\n    flightsFiltersRef.current = { ...initialState.flightsFilters };\n    setVisibleProposals();\n    trackEvent({\n      action: \"resetFilters\",\n    });\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          pb: 2,\n          backgroundColor:\n            theme.palette.mode === \"light\" ? \"#F3F6F9\" : \"inherit\",\n        }}\n      >\n        <Head>\n          <title>{t(\"seo-search-page-title\")}</title>\n        </Head>\n        <ResponsiveAppBar />\n        <Paper\n          variant={theme.palette.mode === \"light\" ? \"outlined\" : \"elevation\"}\n          sx={{ pb: 2, borderLeft: \"none\", borderRight: \"none\" }}\n          square\n        >\n          <SearchForm maxWidth=\"lg\" showBooking={false} rates={state.rates} />\n        </Paper>\n\n        <Container maxWidth=\"lg\" sx={{ py: 2 }}>\n          <Box sx={{ display: \"flex\" }}>\n            <Box\n              sx={{\n                width: \"268px\",\n                display: { xs: \"none\", md: \"block\" },\n                mr: 2,\n              }}\n            >\n              {state.allProposalsLength > 0 ? (\n                <Box>\n                  <Typography gutterBottom>\n                    {t(\"filters-flights-count\", {\n                      value: state.filteredFlightsCount,\n                      value2: _allProposals.current.length,\n                    })}\n                  </Typography>\n                  <Filters\n                    state={state}\n                    handleFilter={handleFilter}\n                    currency={currency}\n                    resetFilters={resetFilters}\n                  />\n                </Box>\n              ) : (\n                <Stack spacing={2}>\n                  <Skeleton variant=\"rectangular\" width={\"100%\"} height={160} />\n                  <Skeleton variant=\"rectangular\" width={\"100%\"} height={160} />\n                  <Skeleton variant=\"rectangular\" width={\"100%\"} height={160} />\n                </Stack>\n              )}\n            </Box>\n            <Box sx={{ flex: 1 }}>\n              {/* <p>Monthly overview of the prices or flight schedule</p> */}\n\n              <MobileFilters\n                state={state}\n                _allProposals={_allProposals}\n                handleFilter={handleFilter}\n                resetFilters={resetFilters}\n                currency={currency}\n              />\n\n              {!state.searchComplete && (\n                <Paper sx={{ p: 2, mb: 2 }} elevation={2}>\n                  <Box\n                    sx={{ display: \"flex\", justifyContent: \"space-between\" }}\n                  >\n                    <Typography sx={{ mb: 1 }}>\n                      {t(\"search-for-flights\")}\n                    </Typography>\n                    {_allProposals.current.length > 1 && (\n                      <Typography>\n                        {_allProposals.current.length} {t(\"flights\")}\n                      </Typography>\n                    )}\n                  </Box>\n                  <LinearProgress />\n                </Paper>\n              )}\n\n              {state.allProposalsLength > 0 && state.sortedFlightsInfo ? (\n                <Paper>\n                  <Tabs\n                    value={state.flightSortBy}\n                    onChange={(e, tV) => onSortingChange(tV)}\n                    // centered\n                    textColor=\"inherit\"\n                    // indicatorColor=\"secondary\"\n                    variant=\"fullWidth\"\n                    sx={{ mb: 2 }}\n                  >\n                    <Tab\n                      label={\n                        <Box sx={{ alignItems: \"start\" }}>\n                          <Typography>\n                            {t(\"flights-sorting-tabs-best\")}\n                          </Typography>\n                          <Typography>\n                            {state.rates &&\n                              currency &&\n                              intl.formatNumber(\n                                state.sortedFlightsInfo.best.amount /\n                                state.rates[currency.code.toLowerCase()],\n                                {\n                                  style: \"currency\",\n                                  currency: currency.code,\n                                  maximumFractionDigits: 0,\n                                  minimumFractionDigits: 0,\n                                }\n                              )}{\" \"}\n                            ·{\" \"}\n                            {secondsToTime(\n                              state.sortedFlightsInfo?.best.duration * 60\n                            )}\n                          </Typography>\n                        </Box>\n                      }\n                    />\n                    <Tab\n                      label={\n                        <Box>\n                          <Typography>\n                            {t(\"flights-sorting-tabs-cheap\")}\n                          </Typography>\n                          <Typography>\n                            {state.rates &&\n                              currency &&\n                              intl.formatNumber(\n                                state.sortedFlightsInfo.cheap.amount /\n                                state.rates[currency.code.toLowerCase()],\n                                {\n                                  style: \"currency\",\n                                  currency: currency.code,\n                                  maximumFractionDigits: 0,\n                                  minimumFractionDigits: 0,\n                                }\n                              )}{\" \"}\n                            ·{\" \"}\n                            {secondsToTime(\n                              state.sortedFlightsInfo?.cheap.duration * 60\n                            )}\n                          </Typography>\n                        </Box>\n                      }\n                    />\n                    <Tab\n                      label={\n                        <Box>\n                          <Typography>\n                            {t(\"flights-sorting-tabs-quick\")}\n                          </Typography>\n                          <Typography>\n                            {state.rates &&\n                              currency &&\n                              intl.formatNumber(\n                                state.sortedFlightsInfo.quick.amount /\n                                state.rates[currency.code.toLowerCase()],\n                                {\n                                  style: \"currency\",\n                                  currency: currency.code,\n                                  maximumFractionDigits: 0,\n                                  minimumFractionDigits: 0,\n                                }\n                              )}{\" \"}\n                            ·{\" \"}\n                            {secondsToTime(\n                              state.sortedFlightsInfo?.quick.duration * 60\n                            )}\n                          </Typography>\n                        </Box>\n                      }\n                    />\n                  </Tabs>\n                </Paper>\n              ) : (\n                <Stack spacing={2} direction=\"row\" sx={{ mb: 2 }}>\n                  <Skeleton\n                    variant=\"rectangular\"\n                    sx={{ flex: 1 }}\n                    height={90}\n                  />\n                  <Skeleton\n                    variant=\"rectangular\"\n                    sx={{ flex: 1 }}\n                    height={90}\n                  />\n                  <Skeleton\n                    variant=\"rectangular\"\n                    sx={{ flex: 1 }}\n                    height={90}\n                  />\n                </Stack>\n              )}\n\n              {state.allProposalsLength > 0 ? (\n                <>\n                  <FlightTickets\n                    proposals={state.proposals}\n                    limit={state.limit}\n                    globalAirlines={state.airlines}\n                    globalAirports={state.airports}\n                    globalGates={state.gates}\n                    rates={state.rates}\n                    searchId={state.searchId}\n                    subId={state.subId}\n                    gclid={state.gclid}\n                  />\n                  {state.proposals.length === 0 && (\n                    <Paper sx={{ p: 2, textAlign: \"center\" }}>\n                      <Typography>\n                        {t(\"search-results-reset-filter\")}\n                      </Typography>\n                      <Button\n                        variant=\"contained\"\n                        disableElevation\n                        sx={{ mt: 2, width: \"100%\" }}\n                        onClick={resetFilters}\n                      >\n                        {t(\"search-results-reset-filter-btn\")}\n                      </Button>\n                    </Paper>\n                  )}\n                </>\n              ) : (\n                <Stack spacing={2}>\n                  <Skeleton variant=\"rectangular\" height={160} />\n                  <Skeleton variant=\"rectangular\" height={160} />\n                  <Skeleton variant=\"rectangular\" height={160} />\n                </Stack>\n              )}\n              {state.proposals?.length > state.limit && (\n                <Button\n                  variant=\"contained\"\n                  disableElevation\n                  sx={{ mt: 2, width: \"100%\" }}\n                  onClick={handleLoadMore}\n                >\n                  {t(\"load-more\")}\n                </Button>\n              )}\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n      <Footer />\n    </>\n  );\n};\n\nexport async function getStaticProps({ locale }: GetStaticPropsContext) {\n  return {\n    props: {\n      // You can get the messages from anywhere you like. The recommended\n      // pattern is to put them in JSON files separated by language and read\n      // the desired one based on the `locale` received from Next.js.\n      messages: (await import(`../messages/index/${locale || 'en'}.json`)).default,\n    },\n  };\n}\n\nexport default Home;\n"],"names":["window","__NEXT_P","push","BookUpsell","dynamic","LazyBookUpsell","isOpen","handleClose","DotSeperator","Box","className","sx","mx","display","FlightTicket","globalGates","ticket","globalAirlines","globalAirports","rates","searchId","handleOnBuy","ref","useRef","intl","useIntl","t","useTranslations","theme","useTheme","currency","useGlobal","useState","useRouter","exapnded","setExpanded","useEffect","current","scrollIntoView","sortedTerms","useMemo","terms","Object","keys","map","key","agent_id","sort","a","b","unified_price","firstTerm","slice","airlinesForSegment","airlinesNamesForSegment","segment","forEach","uniqueAirlines","airlines","airlinesNames","flight","airlineCode","marketing_carrier","operating_carrier","operated_by","indexOf","_code","name","handleBuy","e","term","preventDefault","stopPropagation","open","url","String","includes","label","Paper","padding","cursor","border","borderColor","elevation","onClick","isExpanded","Stack","direction","xs","sm","spacing","flex","justifyContent","index","airlineLogos","alignItems","airlineLogo","Image","src","alt","width","length","height","Typography","noWrap","variant","maxWidth","join","fontSize","fontWeight","gutterBottom","departure_time","arrival_time","formatDateTime","toDate","local_departure_timestamp","month","day","weekday","secondsToTime","segment_durations","departure","city","svg","style","verticalAlign","fill","viewBox","preserveAspectRatio","path","d","arrival","Divider","my","flexDirection","ml","mr","formatNumber","code","toLowerCase","maximumFractionDigits","minimumFractionDigits","Button","mt","value","IconButton","aria-label","KeyboardArrowUp","KeyboardArrowDown","backgroundColor","palette","mode","margin","borderBottomLeftRadius","borderBottomRightRadius","p","span","value2","max_stops","i","__airlineCode","component","listStyle","mb","FlightTakeoff","strong","paddingLeft","marginLeft","borderLeft","Chip","duration","trip_class","aircraft","number","FlightLandIcon","AccessTimeIcon","delay","divider","div","FlightTickets","proposals","limit","gclid","subId","isOpenUpsell","setIsOpenUpsell","_controller","AbortController","_signal","signal","abort","handleOnBuyEvent","useCallback","fetchWithRetry","fetch","body","JSON","stringify","_selected_agent","method","headers","retryConfig","catch","error","captureException","merge","require","maxBy","minBy","toArrayWithKey","obj","keyAs","result","EStopsFilterType","ANY","NON_STOP","ONE_STOP","TWO_STOP","fetchSearchResults","then","r","json","fetchSearchResultsDuffel","query","passengers","Array","from","Number","adults","_","type","children","age","infants","slices","origin","split","destination","to","departure_date","Date","departureDate","toISOString","returnDate","firestoreAutoId","CHARS","autoId","charAt","Math","floor","random","generateFlightUniqueId","airportFrom","airportTo","flightNumber","toUpperCase","generateTicketId","flightUniqueIds","setFlightSortInfo","sortedFlights","bestFlight","EFlightSort","cheapFlight","quickFlight","best","amount","sortFlightTerms","total_duration","cheap","quick","initialState","airports","gates","undefined","searchComplete","filteredFlightsCount","sortedFlightsInfo","filtersBoundaries","price","times","flightSortBy","flightsFilters","stop","allProposalsLength","reducer","state","action","filteredFlights","sortBy","Error","DurationSlider","onDurationChange","_durationV","setDurationV","Slider","getAriaLabel","min","max","valueLabelFormat","v","marks","onChange","target","onChangeCommitted","valueLabelDisplay","getAriaValueText","PriceSlider","onPriceChange","_priceV","setPriceV","formartPrice","MobileFilters","_allProposals","handleFilter","resetFilters","setIsOpen","Skeleton","md","pb","disableElevation","size","trackEvent","Drawer","anchor","onClose","Filters","defaultExpanded","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","aria-controls","AccordionDetails","RadioGroup","aria-labelledby","defaultValue","event","FormControlLabel","control","Radio","px","locale","useReducer","dispatch","canResetRef","cachedKiwiResponse","cachedDuffelResponse","_searchRequestPollTimeout","searchResults","_proposalIndexMap","_filtersBoundaries","_controllerKiwi","_controllerDuffel","_signalKiwi","_signalDuffel","sortByRef","flightsFiltersRef","fetchKiwiFlights","currencyCode","params","fly_from","fly_to","date_from","date_to","vehicle_type","curr","tripClass","ETripClass","selected_cabins","mix_with_cabins","return_from","return_to","k","apiKey","fetchSearchResultsKiwi","res","fetchDuffelFlights","setVisibleProposals","filterFlights","sortFlights","onKiwiFlightsResponse","response","data","flightScannerIdCombined","deepLink","deep_link","route","airline","uniqueId","flyFrom","flyTo","flight_no","finalFlightScannerId","average_rate","currency_code","email","helplink","is_airline","is_exclusive","mobile_version","payment_methods","phone","productivity","show_feedback_popup","site","working_hours","is_kiwi","onFlightsResultsProgress","items","prototype","apply","gate","gates_info","filters_boundary","setFiltersBoundaries","proposal","flightScannerId","segmentFlight","blackList","termsWithoutBackList","black","termsFilttered","cancelPreviousApiCalls","clearTimeout","onFlightsResultsComplete","offers","currRate","total_currency","priceInRubles","total_amount","id","segments","iata_code","marketing_carrier_flight_number","processFlightsSearchResponse","lastItem","isFinalArray","setTimeout","controller","flightSearchRequest","date","flightSearch","flightSearchRequestWithData","marker","host","user_ip","signature","generateSignature","parse","search_id","currency_rates","filterName","filterValue","category","maxPrice","ceil","o","minPrice","maxDuration","flights_duration","minDuration","Head","title","ResponsiveAppBar","borderRight","square","SearchForm","showBooking","Container","py","LinearProgress","Tabs","tV","onSortingChange","textColor","Tab","textAlign","Footer"],"sourceRoot":""}